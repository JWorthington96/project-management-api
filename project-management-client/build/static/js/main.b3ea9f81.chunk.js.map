{"version":3,"sources":["containers/Home.js","components/LoadingButton.js","containers/Login.js","containers/Register.js","containers/Account.js","components/DynamicDeveloperForm.js","containers/NewProject.js","containers/ProjectSettings.js","containers/ProjectView.js","containers/Project.js","containers/Users.js","containers/NotFound.js","components/AppliedRoute.js","Routes.js","App.js","serviceWorker.js","config.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addProject","event","preventDefault","history","push","handleProjectClick","currentTarget","getAttribute","state","isLoading","projects","allProjects","isAuthenticated","setState","checkTokens","user","admin","API","get","headers","Authorization","auth","AccessToken","queryStringParameters","username","console","error","_context","t0","response","map","project","react_default","a","createElement","lib","key","projectId","to","concat","ListGroupItem","header","title","Date","createdAt","toLocaleString","projectManager","className","PageHeader","ListGroup","renderProjectsList","ButtonToolbar","Button","onClick","Glyphicon","glyph","Tabs","activeKey","onSelect","handleSelect","id","Tab","eventKey","renderProjects","renderAllProjects","renderLander","Component","components_LoadingButton","_ref","text","loadingText","_ref$disabled","disabled","objectWithoutProperties","assign","Login","context","handleChange","defineProperty","target","value","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","e","attributes","wrap","prev","next","post","body","Username","Password","password","sent","UserAttributes","attribute","Name","ClockDrift","Math","floor","IssuedAt","localStorage","setItem","JSON","stringify","userHasAuthenticated","setCurrentUser","data","message","showConfirm","code","incorrect","stop","_x","apply","arguments","handleDismiss","isConfirmed","handleResend","_ref2","_callee2","_context2","_x2","handleConfirmSubmit","_ref3","_callee3","_context3","isConfirmLoading","ConfirmationCode","alert","_x3","handleHide","bind","assertThisInitialized","usernameLen","length","passLen","getValidationBoolean","_this2","Alert","bsStyle","onDismiss","tooltip","Tooltip","onSubmit","FormGroup","controlId","validationState","getValidationState","ControlLabel","FormControl","type","placeholder","onChange","Feedback","OverlayTrigger","placement","overlay","react","Form","renderAlert","Register","newUser","email","skills","Email","Skills","confirmPass","emailLen","userLen","autoFocus","HelpBlock","Modal","show","onHide","Header","Body","Footer","Account","handleCheckbox","changePassword","handleSubmitEmail","handleSubmitSkills","input","Value","emailLoading","skillsLoading","put","_x4","handleSubmitPassword","_ref4","_callee4","_context4","Auth","oldPassword","newPassword","log","_x5","passwordLoading","oldLen","newLen","usernameTooltip","passwordTooltip","inline","Checkbox","DynamicDeveloperForm","setDevelopers","currentDevelopers","confirmDevelopers","currentId","addDeveloper","changeDeveloper","deleteDeveloper","developer","devs","undefined","developers","splice","DynamicDeveloperForm_DeveloperFormList","DynamicDeveloperForm_NewDeveloperForm","siteUsers","DeveloperFormList","Number","handleDelete","_this3","i","toString","NewDeveloperForm","_this4","newDeveloper","handleAdd","managerError","includes","handleIgnore","handleClose","validateForm","renderModal","NewProject","boolean","usernames","isSubmitting","createProject","description","users","Users","componentClass","DynamicDeveloperForm_DynamicDeveloperForm","name","ProjectSettings","changeDeleteBool","confirmDelete","changeManagerBool","confirmManager","projectStatus","deleteProject","isDeleteLoading","del","match","params","hist","changeDevelopers","isChangeLoading","changeManager","projectRoles","roles","Role","setStatus","setNewRoles","setNewDevelopers","status","ProjectSettings_StatusDropdown","Table","responsive","striped","bordered","role","ref","ProjectSettings_ProjectUsers","Title","ProjectUsers","handleClick","newProjectManager","handleRemove","indexOf","_ref5","_callee5","_context5","window","location","reload","_x6","siteUsernames","Attributes","style","float","StatusDropdown","selected","projectStatuses","_this5","DropdownButton","dropup","MenuItem","Project","renderUsers","getProject","ProjectView_Project","ProjectSettings_ProjectSettings","renderLoading","renderProject","UserCreateDate","renderUserList","containers_NotFound","AppliedRoute","C","component","cProps","rest","Route","render","Routes","childProps","Switch","path","exact","NotFound","App","authenticated","handleLogout","removeItem","isAuthenticating","parse","getItem","Expiration","refreshUser","RefreshToken","IdToken","Navbar","fluid","collapseOnSelect","Brand","Link","Toggle","Collapse","Nav","pullRight","NavItem","withRouter","Boolean","hostname","config","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Amplify","configure","Storage","region","bucket","identityPoolId","endpoints","endpoint","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3ea9f81.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {PageHeader, ButtonToolbar, Button, Glyphicon, ListGroup, ListGroupItem, Tabs, Tab} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {API} from \"aws-amplify\";\r\nimport \"./Home.css\";\r\n\r\nexport default class Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            projects: [],\r\n            allProjects: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (!this.props.isAuthenticated) {\r\n            this.setState({isLoading: false});\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            //console.log(this.props.user);\r\n\r\n            let allProjects = [];\r\n            if (this.props.user.admin) {\r\n                // listing all projects if the user is an admin\r\n                allProjects = await API.get(\"projects\", \"/projects/all\", {\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                    }\r\n                });\r\n            }\r\n            // listing all projects associated with the authenticated user\r\n            const projects = await API.get(\"projects\", \"/projects\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                },\r\n                queryStringParameters: {\r\n                    username: this.props.user.username\r\n                }\r\n            });\r\n            this.setState({\r\n                projects: projects,\r\n                allProjects: allProjects\r\n            });\r\n        } catch (error) {\r\n            console.error(error.response);\r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    addProject = event => {\r\n        event.preventDefault();\r\n        this.props.history.push(\"/projects/new\");\r\n    };\r\n\r\n    handleProjectClick = event => {\r\n        event.preventDefault();\r\n        this.props.push(event.currentTarget.getAttribute(\"href\"));\r\n    };\r\n    \r\n    renderProjectsList(projects){\r\n        return projects.map( (project) =>\r\n                <LinkContainer key={project.projectId} to={`/projects/${project.projectId}`}>\r\n                    <ListGroupItem header={project.title}>\r\n                        {\"Created: \" + new Date(project.createdAt).toLocaleString()} <br/>\r\n                        Project manager: {project.projectManager}\r\n                    </ListGroupItem>\r\n                </LinkContainer>\r\n        );\r\n    }\r\n\r\n    renderLander() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <div className=\"lander\">\r\n                    <h1>Project Manager</h1>\r\n                    <p>A project management app</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderProjects() {\r\n        return (\r\n            <div className=\"projects\">\r\n                <PageHeader>Your Projects</PageHeader>\r\n                <ListGroup className=\"projects-list\">\r\n                    {!this.state.isLoading && this.renderProjectsList(this.state.projects)}\r\n                </ListGroup>\r\n                <ButtonToolbar className=\"toolbar\">\r\n                    <Button onClick={this.addProject}>\r\n                        <Glyphicon glyph=\"plus\" />\r\n                    </Button>\r\n                </ButtonToolbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAllProjects() {\r\n        return (\r\n            <div className=\"all-projects\">\r\n                <PageHeader>All Projects</PageHeader>\r\n                <ListGroup className=\"projects-list\">\r\n                    {!this.state.isLoading && this.renderProjectsList(this.state.allProjects)}\r\n                </ListGroup>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // if the user is not authenticated it will render the lander, else if the user is an admin it will render\r\n    // \"Your Projects\" and \"All Projects\" as separate tabs, otherwise it will just render \"Your Projects\"\r\n    render() {\r\n        return(\r\n            <div className=\"Projects-Tabs\">\r\n                {this.props.isAuthenticated && this.props.user ?\r\n                    this.props.user.admin ?\r\n                        <Tabs activeKey={this.state.activeKey}\r\n                              onSelect={this.handleSelect}\r\n                              id=\"tabs\">\r\n                            <Tab eventKey={1} title=\"Your projects\">\r\n                                {this.renderProjects()}\r\n                            </Tab>\r\n                            <Tab eventKey={2} title=\"All projects\">\r\n                                {this.renderAllProjects()}\r\n                            </Tab>\r\n                        </Tabs>\r\n                        : this.renderProjects()\r\n                    : this.renderLander()\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Glyphicon} from \"react-bootstrap\";\r\nimport \"./LoadingButton.css\";\r\n\r\nexport default ({\r\n    isLoading,\r\n    text,\r\n    loadingText,\r\n    className = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) =>\r\n    <Button\r\n        className={`LoadingButton $(className)`}\r\n        disabled={disabled || isLoading}\r\n        {...props}\r\n    >\r\n        {!isLoading ? text: loadingText}\r\n        {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\r\n    </Button>;","import React, {Component, Fragment} from \"react\";\r\nimport {\r\n    Alert,\r\n    Button,\r\n    ControlLabel,\r\n    FormGroup,\r\n    FormControl,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    Form,\r\n    Modal\r\n} from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport {API} from \"aws-amplify\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\n\r\nexport default class Login extends Component {\r\n    constructor(props, context){\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            isLoading: false,\r\n            isConfirmLoading: false,\r\n            showConfirm: false,\r\n            incorrect: false,\r\n            username: '',\r\n            password: '',\r\n            code: ''\r\n        };\r\n    }\r\n\r\n    getValidationBoolean() {\r\n        const usernameLen = this.state.username.length;\r\n        const passLen = this.state.password.length;\r\n        return (usernameLen > 0 && passLen > 8);\r\n    };\r\n\r\n    getValidationState(){\r\n        return this.getValidationBoolean() ? 'success' : 'error';\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    };\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        this.setState({isLoading: true});\r\n\r\n        try {\r\n            // calling the sign in and get user methods on the backend\r\n            const response = (await API.post(\"projects\", \"/login\", {body: {\r\n                    Username: this.state.username,\r\n                    Password: this.state.password\r\n                }\r\n            })).body;\r\n            //console.log(response);\r\n\r\n            const attributes = (await API.get(\"projects\", \"/users\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + response.AccessToken\r\n                }\r\n            })).body;\r\n            //console.log(attributes);\r\n\r\n            const user = {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                attributes: attributes.UserAttributes,\r\n                auth: response\r\n            };\r\n\r\n            let admin = false;\r\n            user.attributes.map( (attribute) => {\r\n                if (attribute.Name === \"custom:admin\") admin = true;\r\n            });\r\n            user.admin = admin;\r\n\r\n            // calculating the clock drift from the server\r\n            user.auth.ClockDrift = Math.floor(new Date()/1000) - user.auth.IssuedAt;\r\n\r\n            localStorage.setItem(\"ProjectManagerSession\", JSON.stringify(user));\r\n            this.props.userHasAuthenticated(true);\r\n            // this will store the user in App.js for use in the site\r\n            await this.props.setCurrentUser(user);\r\n            this.props.history.push('/');\r\n        } catch (error) {\r\n            if (error.response.data.body.message === \"User is not confirmed.\") {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    showConfirm: true\r\n                });\r\n            } else if (error.response.data.body.code === \"NotAuthorizedException\") {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    incorrect: true\r\n                });\r\n                // TODO: add prompt that shows the username or pass was incorrect\r\n            } else if (error.message === \"User does not exist.\") {\r\n                this.props.history.push('/register');\r\n            } else {\r\n                console.error(error.response);\r\n                this.setState({isLoading: false});\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDismiss = (event, password) => {\r\n        if (password) {\r\n            this.setState({incorrect: false})\r\n        } else {\r\n            this.setState({isConfirmed: true});\r\n        }\r\n    };\r\n\r\n    handleResend = async event => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await API.post(\"projects\", \"register/resend\", {\r\n                Username: this.state.username\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleConfirmSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({isConfirmLoading: true});\r\n\r\n        try {\r\n            await API.post(\"projects\", \"/register/confirm\", {body: {\r\n                    Username: this.state.username,\r\n                    ConfirmationCode: this.state.code\r\n                }\r\n            });\r\n\r\n            alert(\"Successfully confirmed email! You can now log in.\");\r\n            this.setState({\r\n                showConfirm: false,\r\n                isConfirmLoading: false\r\n            });\r\n        } catch (error) {\r\n            console.error(error.response);\r\n            this.setState({isConfirmLoading: false});\r\n        }\r\n    };\r\n\r\n    handleHide = event => {\r\n        this.setState({showConfirm: false});\r\n    };\r\n\r\n    renderAlert(){\r\n        return(\r\n            <Alert className=\"alert\" bsStyle=\"danger\" onDismiss={(event) => this.handleDismiss(event, true)}>\r\n                <h3>Incorrect username or password</h3>\r\n                <p>\r\n                    No username/password combination found, please make sure you have entered the correct details\r\n                    (username and password are both case sensitive).\r\n                </p>\r\n                <Button onClick={(event) => this.handleDismiss(event, true)}>Dismiss</Button>\r\n            </Alert>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const tooltip =\r\n            <Tooltip id=\"password-tooltip\">\r\n                Password is at least 8 characters long.\r\n            </Tooltip>;\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormGroup\r\n                        controlId=\"username\"\r\n                        validationState={this.getValidationState()}\r\n                    >\r\n                        <ControlLabel>Username</ControlLabel>\r\n                        <FormControl\r\n                            type=\"username\"\r\n                            placeholder=\"Your username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <FormControl.Feedback />\r\n                    </FormGroup>\r\n\r\n                    <OverlayTrigger placement=\"bottom\" overlay={tooltip}>\r\n                        <FormGroup\r\n                            controlId=\"password\"\r\n                            validationState={this.getValidationState()}\r\n                        >\r\n                            <ControlLabel>Password</ControlLabel>\r\n                            <FormControl\r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <FormControl.Feedback />\r\n                        </FormGroup>\r\n                    </OverlayTrigger>\r\n\r\n                    <LoadingButton\r\n                        type=\"submit\"\r\n                        disabled={!this.getValidationBoolean()}\r\n                        isLoading={this.state.isLoading}\r\n                        text=\"Login\"\r\n                        loadingText=\"Logging in...\"\r\n                    />\r\n\r\n                    {!this.state.showConfirm ? null\r\n                        : <Fragment>\r\n                            <Alert className=\"alert\" bsStyle=\"danger\" onDismiss={this.handleDismiss}>\r\n                                <h3>Thank you again for registering!</h3>\r\n                                <p>Unfortunately you still haven't confirmed your account. Please check your email to\r\n                                    find the code to confirm your account before signing in, alternatively, if that\r\n                                    doesn't work or you lost the email, click the button below to resend the\r\n                                    confirmation email.</p>\r\n                                <Form onSubmit={this.handleConfirmSubmit}>\r\n                                    <FormGroup controlId=\"code\">\r\n                                        <ControlLabel>Code:</ControlLabel>\r\n                                        <FormControl value={this.state.code}\r\n                                                     onChange={this.handleChange} />\r\n                                    </FormGroup>\r\n                                    <LoadingButton type=\"submit\"\r\n                                                   isLoading={this.state.isConfirmLoading}\r\n                                                   text=\"Confirm\"\r\n                                                   loadingText=\"Confirming...\" />\r\n                                </Form>\r\n                                <br/>\r\n                                <p>\r\n                                    <Button onClick={this.handleResend}>Resend email</Button>\r\n                                    <span>  or  </span>\r\n                                    <Button onClick={this.handleDismiss}>Dismiss</Button>\r\n                                </p>\r\n                            </Alert>\r\n                        </Fragment>}\r\n                    {this.state.incorrect ? this.renderAlert() : null}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {ControlLabel, Form, FormGroup, FormControl, HelpBlock, Modal, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\nimport \"./Register.css\";\r\nimport {API} from \"aws-amplify\";\r\n\r\nexport default class Register extends Component {\r\n    constructor(props, context){\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            isConfirmed: false,\r\n            isLoading: false,\r\n            isConfirmLoading: false,\r\n            showConfirm: false,\r\n            email: '',\r\n            skills: '',\r\n            username: '',\r\n            password: '',\r\n            confirmPass: '',\r\n            code: '',\r\n            newUser: {}\r\n        };\r\n    }\r\n\r\n    getValidationState() {\r\n        const emailLen = this.state.email.length;\r\n        const userLen = this.state.username.length;\r\n        const passLen = this.state.password.length;\r\n        if (emailLen > 0 && userLen > 0 && passLen > 8 &&\r\n            this.state.confirmPass === this.state.password) return 'success';\r\n        else return 'error';\r\n    }\r\n\r\n    getValidationBoolean(){\r\n        return this.getValidationState() === 'success';\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({[event.target.id]: event.target.value})\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({isLoading: true});\r\n        try {\r\n            const newUser = {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                email: this.state.email,\r\n                skills: this.state.skills\r\n            };\r\n            await API.post(\"projects\", \"/register\", {body: {\r\n                    Username: newUser.username,\r\n                    Password: newUser.password,\r\n                    Email: newUser.email,\r\n                    Skills: newUser.skills\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                newUser: newUser,\r\n                showConfirm: true\r\n            });\r\n        } catch (error) {\r\n            if (error.response.data.body === \"Password did not conform with password policy.\")\r\n                alert(\"Password must have a lower case, upper case, symbol and number.\");\r\n            else if (error.response.data.body === \"User already exists\") alert(\"ERROR: username is already taken.\");\r\n            else {\r\n                console.error(error.response);\r\n                this.setState({isLoading: false});\r\n            }\r\n        }\r\n    };\r\n\r\n    handleConfirmSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({isConfirmLoading: true});\r\n        //console.log(this.state.newUser);\r\n\r\n        try {\r\n            await API.post(\"projects\", \"/register/confirm\", {body: {\r\n                    Username: this.state.newUser.username,\r\n                    ConfirmationCode: this.state.code\r\n                }\r\n            });\r\n\r\n            alert(\"Successfully confirmed email! You can now log in.\");\r\n            this.props.history.push('/login');\r\n        } catch (error) {\r\n            console.error(error.response);\r\n            this.setState({isConfirmLoading: false});\r\n        }\r\n    };\r\n\r\n    handleHide = event => {\r\n        this.setState({showConfirm: false});\r\n    };\r\n\r\n    render() {\r\n        const tooltip =\r\n            <Tooltip>\r\n                Password must be at least 8 characters long with an upper case, lower case, number and symbol.\r\n            </Tooltip>;\r\n\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormGroup controlId=\"email\">\r\n                        <ControlLabel>Email</ControlLabel>\r\n                        <FormControl autoFocus\r\n                                     type=\"email\"\r\n                                     value={this.state.email}\r\n                                     onChange={this.handleChange}\r\n                                     placeholder=\"john.doe@example.com\"\r\n                        />\r\n                        <FormControl.Feedback />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup controlId=\"username\">\r\n                        <ControlLabel>Username</ControlLabel>\r\n                        <FormControl type=\"username\"\r\n                                     value={this.state.username}\r\n                                     onChange={this.handleChange}\r\n                                     placeholder=\"xXexampleXx\" />\r\n                        <FormControl.Feedback />\r\n                    </FormGroup>\r\n\r\n                    <OverlayTrigger placement=\"bottom\" overlay={tooltip}>\r\n                        <FormGroup\r\n                            controlId=\"password\"\r\n                            validationState={this.getValidationState()}\r\n                        >\r\n                            <ControlLabel>Password</ControlLabel>\r\n                            <FormControl\r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <FormControl.Feedback />\r\n                        </FormGroup>\r\n                    </OverlayTrigger>\r\n\r\n                    <FormGroup\r\n                        controlId=\"confirmPass\"\r\n                        validationState={this.getValidationState()}\r\n                    >\r\n                        <ControlLabel>Confirm password</ControlLabel>\r\n                        <FormControl\r\n                            type=\"password\"\r\n                            value={this.state.confirmPass}\r\n                            onChange={this.handleChange} />\r\n                        <FormControl.Feedback />\r\n                        <HelpBlock>Must match password</HelpBlock>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup controlId=\"skills\">\r\n                        <ControlLabel>Skills</ControlLabel>\r\n                        <FormControl value={this.state.skills}\r\n                                     onChange={this.handleChange} />\r\n                        <HelpBlock>Enter all your relevant skills, separated by commas</HelpBlock>\r\n                    </FormGroup>\r\n\r\n                    <LoadingButton\r\n                        type=\"submit\"\r\n                        disabled={!this.getValidationBoolean()}\r\n                        isLoading={this.state.isLoading}\r\n                        text=\"Register\"\r\n                        loadingText=\"Registering...\"\r\n                    />\r\n                </form>\r\n\r\n                <Modal show={this.state.showConfirm}\r\n                       onHide={this.handleHide} >\r\n                    <Form onSubmit={this.handleConfirmSubmit}>\r\n                        <Modal.Header>\r\n                            Confirm your username.\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Please enter the confirmation code sent to your email below:\r\n                            <FormGroup controlId=\"code\">\r\n                                <ControlLabel>Code:</ControlLabel>\r\n                                <FormControl value={this.state.code}\r\n                                             onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <LoadingButton type=\"submit\"\r\n                                           isLoading={this.state.isConfirmLoading}\r\n                                           text=\"Confirm\"\r\n                                           loadingText=\"Confirming...\"\r\n                            />\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Checkbox, ControlLabel, Form, FormGroup, FormControl, HelpBlock, ListGroup, ListGroupItem,\r\n        OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\nimport {Auth, API} from \"aws-amplify\";\r\n\r\nexport default class Account extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            changePassword: false,\r\n            isLoading: false,\r\n            emailLoading: false,\r\n            skillsLoading: false,\r\n            passwordLoading: false,\r\n            username: this.props.user.username,\r\n            email: \"\",\r\n            oldPassword: \"\",\r\n            newPassword: \"\",\r\n            skills: \"\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.user.attributes.map( (attribute) => {\r\n            if (attribute.Name === \"email\") this.setState({email: attribute.Value});\r\n            if (attribute.Name === \"custom:skills\") this.setState({skills: attribute.Value});\r\n        });\r\n    }\r\n\r\n    handleCheckbox = event => {\r\n        this.setState({changePassword: !this.state.changePassword});\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    };\r\n\r\n    handleSubmitEmail = async event => {\r\n        await this.handleSubmit(event, true);\r\n    };\r\n\r\n    handleSubmitSkills = async event => {\r\n        await this.handleSubmit(event, false);\r\n    };\r\n\r\n    handleSubmit = async (event, email) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const input = {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                },\r\n                body: {\r\n                    AccessToken: this.props.user.auth.AccessToken,\r\n                    UserAttributes: [\r\n                        {\r\n                            Name: \"\",\r\n                            Value: \"\"\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n            if (email) {\r\n                this.setState({emailLoading: true});\r\n                input.body.UserAttributes.Name = \"email\";\r\n                input.body.UserAttributes.Value = this.state.email;\r\n            } else {\r\n                this.setState({skillsLoading: true});\r\n                input.body.UserAttributes.Name = \"custom:skills\";\r\n                input.body.UserAttributes.Value = this.state.email;\r\n            }\r\n            await this.props.checkTokens();\r\n            await API.put(\"projects\", \"/users\", input);\r\n        } catch (error) {\r\n            this.setState({\r\n                emailLoading: false,\r\n                skillsLoading: false\r\n            });\r\n            console.error(error.response);\r\n        }\r\n\r\n        this.setState({\r\n            emailLoading: false,\r\n            skillsLoading: false\r\n        });\r\n    };\r\n\r\n    handleSubmitPassword = async event => {\r\n        event.preventDefault();\r\n        this.setState({isLoading: true});\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            await Auth.changePassword(this.props.user, this.state.oldPassword, this.state.newPassword);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    };\r\n\r\n    getValidationBoolean() {\r\n        const oldLen = this.state.oldPassword.length;\r\n        const newLen = this.state.newPassword.length;\r\n        return (oldLen > 12 && newLen > 12);\r\n    }\r\n\r\n    getValidationState() {\r\n        return this.getValidationBoolean() ? 'success' : 'error';\r\n    }\r\n\r\n    render() {\r\n        const usernameTooltip = (\r\n            <Tooltip id=\"usernameTooltip\">\r\n                Cannot change username.\r\n            </Tooltip>\r\n        );\r\n        const passwordTooltip = (\r\n            <Tooltip id=\"passwordTooltip\">\r\n                Password must be at least <strong>12 characters</strong>, contain at least\r\n                <strong>one capital and symbol</strong>.\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Account\">\r\n                <ListGroup>\r\n                    <ListGroupItem>\r\n                        <FormGroup>\r\n                            <ControlLabel>Username:</ControlLabel>\r\n                            <OverlayTrigger placement=\"bottom\"\r\n                                            overlay={usernameTooltip}>\r\n                                <FormControl value={this.state.username}\r\n                                             disabled={true} />\r\n                            </OverlayTrigger>\r\n                        </FormGroup>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <Form inline onSubmit={this.handleSubmit}>\r\n                            <FormGroup controlId=\"email\">\r\n                                <ControlLabel>Email</ControlLabel>{\": \"}\r\n                                <FormControl value={this.state.email}\r\n                                             onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <LoadingButton type=\"submit\"\r\n                                           isLoading={this.state.emailLoading}\r\n                                           text=\"Submit changes\"\r\n                                           loadingText=\"Submitting...\" />\r\n                        </Form>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <Form inline onSubmit={this.handleSubmitSkills}>\r\n                            <FormGroup controlId=\"skills\">\r\n                                <ControlLabel>Skills</ControlLabel>{\": \"}\r\n                                <FormControl value={this.state.skills}\r\n                                             onChange={this.handleChange} />\r\n                                {\r\n                                    // TODO: make changing (and adding) skills UI similar to the one for adding developers\r\n                                    // to a new project\r\n                                }\r\n                            </FormGroup>\r\n                            <LoadingButton type=\"submit\"\r\n                                           isLoading={this.state.skillsLoading}\r\n                                           text=\"Submit changes\"\r\n                                           loadingText=\"Submitting...\" />\r\n                        </Form>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <Checkbox onChange={this.handleCheckbox}>Change password</Checkbox>\r\n                        {this.state.changePassword ?\r\n                            <Form inline onSubmit={this.handleSubmitPassword}>\r\n                                <FormGroup controlId=\"oldPassword\"\r\n                                           validationState={this.getValidationState()} >\r\n                                    <ControlLabel>Old password:</ControlLabel>\r\n                                    <OverlayTrigger placement=\"bottom\" overlay={passwordTooltip}>\r\n                                        <FormControl type=\"password\"\r\n                                                     value={this.state.oldPassword}\r\n                                                     onChange={this.handleChange} />\r\n                                    </OverlayTrigger>\r\n                                    <FormControl.Feedback />\r\n                                </FormGroup>\r\n                                <FormGroup controlId=\"newPassword\"\r\n                                           validationState={this.getValidationState()} >\r\n                                    <ControlLabel>New password:</ControlLabel>\r\n                                    <OverlayTrigger placement=\"bottom\" overlay={passwordTooltip}>\r\n                                        <FormControl type=\"password\"\r\n                                                     value={this.state.newPassword}\r\n                                                     onChange={this.handleChange} />\r\n                                    </OverlayTrigger>\r\n                                    <FormControl.Feedback />\r\n                                </FormGroup>\r\n                                <LoadingButton type=\"submit\"\r\n                                               disabled={!this.getValidationBoolean}\r\n                                               isLoading={this.state.passwordLoading}\r\n                                               text=\"Change\"\r\n                                               loadingText=\"Changing...\" />\r\n                            </Form>\r\n                            : null }\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Button, ControlLabel, Form, FormControl, FormGroup, Glyphicon, ListGroupItem, Modal} from \"react-bootstrap\"\r\n\r\n// Component to allow the admin to add developers when creating the project\r\nexport default class DynamicDeveloperForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentId: 0,\r\n            currentDevelopers: []\r\n        };\r\n\r\n        this.addDeveloper = this.addDeveloper.bind(this);\r\n        this.changeDeveloper = this.changeDeveloper.bind(this);\r\n        this.deleteDeveloper = this.deleteDeveloper.bind(this);\r\n    }\r\n\r\n    addDeveloper(developer) {\r\n        const id = this.state.currentId;\r\n        const devs = this.state.currentDevelopers;\r\n        devs[id] = developer;\r\n        console.log(devs);\r\n\r\n        if (this.props.developers === undefined){\r\n            this.props.confirmDevelopers(true);\r\n        } else if (devs.length !== this.props.developers.length) {\r\n            this.props.confirmDevelopers(false);\r\n        }\r\n        this.setState({currentId: id + 1, currentDevelopers: devs});\r\n    }\r\n\r\n    changeDeveloper(id, developer) {\r\n        const devs = this.state.currentDevelopers;\r\n        devs[id] = developer;\r\n    }\r\n\r\n    deleteDeveloper(id) {\r\n        const devs = this.state.currentDevelopers;\r\n        devs.splice(id, 1);\r\n        if (devs.length === 0) this.props.confirmDevelopers(true);\r\n        this.setState({currentId: devs.length, currentDevelopers: devs});\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.setDevelopers(this.state.currentDevelopers);\r\n        this.props.confirmDevelopers(true);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"developers\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <DeveloperFormList\r\n                        developers={this.state.currentDevelopers}\r\n                        changeDeveloper={this.changeDeveloper}\r\n                        deleteDeveloper={this.deleteDeveloper}\r\n                    />\r\n                    <NewDeveloperForm addDeveloper={this.addDeveloper}\r\n                                      projectManager={this.props.projectManager}\r\n                                      siteUsers={this.props.siteUsers} />\r\n                    <Button type=\"submit\"\r\n                            disabled={this.state.confirmDevelopers}>\r\n                        Confirm developers\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// React component to render all the currently added developers\r\nclass DeveloperFormList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleChange = event => {\r\n        const id = Number(event.target.id);\r\n        const value = event.target.value;\r\n        this.props.changeDeveloper(id, value);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const id = Number(event.target.id);\r\n        this.props.deleteDeveloper(id);\r\n    };\r\n\r\n    render() {\r\n        return this.props.developers.map( (developer, i) =>\r\n            <ListGroupItem key={i}>\r\n                <FormGroup controlId={i.toString()}>\r\n                    <ControlLabel>Developer {i + 1}</ControlLabel>\r\n                    <FormControl onChange={this.handleChange} value={developer} />\r\n                </FormGroup>\r\n\r\n                <Button id={i.toString()} onClick={this.handleDelete}>\r\n                    <Glyphicon glyph=\"minus\"/>\r\n                </Button>\r\n            </ListGroupItem>\r\n        );\r\n    }\r\n}\r\n\r\n// React component to render a new developer form\r\nclass NewDeveloperForm extends Component {\r\n    //TODO: add a way to check the developer exists in the user base\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            newDeveloper: \"\",\r\n            managerError: false,\r\n            error: false\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({newDeveloper: event.target.value});\r\n    };\r\n\r\n    handleAdd = event => {\r\n        if (this.state.newDeveloper === this.props.projectManager){\r\n            this.setState({\r\n                managerError: true,\r\n                error: true\r\n            });\r\n        } else if (this.props.siteUsers.includes(this.state.newDeveloper)){\r\n            this.handleIgnore(event);\r\n        } else {\r\n            this.setState({error: true});\r\n        }\r\n    };\r\n\r\n    handleIgnore = event => {\r\n        event.preventDefault();\r\n        this.props.addDeveloper(this.state.newDeveloper);\r\n        this.setState({\r\n            newDeveloper: \"\",\r\n            error: false\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({error: false});\r\n    };\r\n\r\n    validateForm(){\r\n        return this.state.newDeveloper.length > 0;\r\n    }\r\n\r\n    renderModal() {\r\n        return (\r\n            <Modal show={this.state.error}>\r\n                <Modal.Header>\r\n                    Error!\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {this.state.managerError ?\r\n                        <h4>You cannot add yourself as a developer, this is implied (and can be changed later).</h4>\r\n                        :\r\n                        <h4>User not found in user base.</h4>\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {this.state.managerError ? null :\r\n                        <Button onClick={this.handleIgnore}>Add anyway</Button>\r\n                    }\r\n                    <Button onClick={this.handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListGroupItem>\r\n                <FormGroup controlId=\"newDeveloper\">\r\n                    <ControlLabel>New developer</ControlLabel>\r\n                    <FormControl onChange={this.handleChange} value={this.state.newDeveloper} />\r\n                </FormGroup>\r\n\r\n                <Button disabled={!this.validateForm()} onClick={this.handleAdd}>\r\n                    <Glyphicon glyph=\"plus\" />\r\n                </Button>\r\n                {this.renderModal()}\r\n            </ListGroupItem>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Checkbox, ControlLabel, Form, FormGroup, FormControl, ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport DynamicDeveloperForm from \"../components/DynamicDeveloperForm\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\nimport {API} from \"aws-amplify\";\r\nimport \"./NewProject.css\";\r\n\r\nexport default class NewProject extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            isSubmitting: false,\r\n            confirmDevelopers: true,\r\n            siteUsers: [],\r\n            title: \"\",\r\n            description: \"\",\r\n            developers: []\r\n        };\r\n\r\n        this.setDevelopers = this.setDevelopers.bind(this);\r\n        this.confirmDevelopers = this.confirmDevelopers.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.props.checkTokens();\r\n            const users = await API.get(\"projects\", \"/users/list\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                }\r\n            });\r\n\r\n            let siteUsers = [];\r\n            users.Users.map( (user) => {\r\n                siteUsers.push(user.Username);\r\n            });\r\n            this.setState({siteUsers: siteUsers});\r\n            console.log(this.state.siteUsers);\r\n        } catch (error) {\r\n            console.error(error.response);\r\n        }\r\n        this.setState({isLoading: false});\r\n    };\r\n\r\n    validateForm(){\r\n        return this.state.title.length !==0 && this.state.description.length !== 0 && this.state.confirmDevelopers;\r\n    };\r\n\r\n    setDevelopers(developers) {\r\n        this.setState({developers: developers});\r\n    };\r\n\r\n    confirmDevelopers = boolean => {\r\n        this.setState({confirmDevelopers: boolean});\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    };\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({isSubmitting: true});\r\n\r\n        let usernames = [];\r\n        usernames.push(this.props.user.username);\r\n        for (let i = 0; i < this.state.developers.length; i++){\r\n            usernames.push(this.state.developers[i]);\r\n        }\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            const project = await this.createProject({\r\n                title: this.state.title,\r\n                projectManager: this.props.user.username,\r\n                description: this.state.description,\r\n                developers: this.state.developers,\r\n                usernames: usernames\r\n            });\r\n            console.log(project);\r\n            this.props.history.push(\"/\");\r\n        } catch (error) {\r\n            console.error(error.response);\r\n            this.setState({isSubmitting: false});\r\n        }\r\n    };\r\n\r\n    createProject(project) {\r\n        return API.post(\"projects\", \"/projects\", {\r\n            headers: {\r\n                Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n            },\r\n            body: project\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewProject\">\r\n                {!this.state.isLoading ?\r\n                    <ListGroup>\r\n                        <ListGroupItem>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup controlId=\"title\">\r\n                                    <ControlLabel>Title of project</ControlLabel>{': '}\r\n                                    <FormControl onChange={this.handleChange} value={this.state.title}/>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup controlId=\"description\">\r\n                                    <ControlLabel>Brief description</ControlLabel>{': '}\r\n                                    <FormControl onChange={this.handleChange}\r\n                                                 value={this.state.description}\r\n                                                 componentClass=\"textarea\" />\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <LoadingButton type=\"submit\"\r\n                                                   isLoading={this.state.isSubmitting}\r\n                                                   text=\"Create\"\r\n                                                   loadingText=\"Creating...\"\r\n                                                   disabled={!this.validateForm()} />\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </ListGroupItem>\r\n\r\n                        <ListGroupItem>\r\n                            <h4>*OPTIONAL* Add known developers</h4>\r\n                            <DynamicDeveloperForm setDevelopers={this.setDevelopers}\r\n                                                  confirmDevelopers={this.confirmDevelopers}\r\n                                                  name={this.state.title}\r\n                                                  description={this.state.description}\r\n                                                  projectManager={this.props.user.username}\r\n                                                  siteUsers={this.state.siteUsers} />\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                    :\r\n                    <h2>Loading...</h2>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    ControlLabel,\r\n    DropdownButton,\r\n    Form,\r\n    FormControl,\r\n    FormGroup,\r\n    Glyphicon,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    MenuItem,\r\n    Modal,\r\n    PageHeader,\r\n    Table\r\n} from \"react-bootstrap\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\nimport {API} from \"aws-amplify\";\r\nimport \"./ProjectSettings.css\";\r\n\r\nexport default class ProjectSettings extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            isDeleteLoading: false,\r\n            isChangeLoading: false,\r\n            confirmDelete: false,\r\n            confirmManager: false,\r\n            changeManager: false,\r\n            projectStatus: this.props.project.projectStatus,\r\n            title: this.props.project.title,\r\n            description: this.props.project.description,\r\n            projectManager: this.props.project.projectManager,\r\n            developers: this.props.project.developers,\r\n            usernames: this.props.project.usernames,\r\n            projectRoles: [\r\n                {\r\n                    name: \"Project Manager\",\r\n                    description: \"In charge of the project, has complete access.\"\r\n                },\r\n                {\r\n                    name: \"Developer\",\r\n                    description: \"Develops for the project, has access to viewing the \" +\r\n                        \"project and adding new files/changing ones they've created.\"\r\n                }\r\n            ]\r\n        };\r\n        const roles = [];\r\n        roles.push({Username: this.props.project.projectManager, Role: \"Project Manager\"});\r\n        this.props.project.developers.map( (developer) => {\r\n            roles.push({Username: developer, Role: \"Developer\"})\r\n        });\r\n        this.setState({roles: roles});\r\n        this.setStatus = this.setStatus.bind(this);\r\n        this.setNewRoles = this.setNewRoles.bind(this);\r\n        this.setNewDevelopers = this.setNewDevelopers.bind(this);\r\n        this.changeDevelopers = this.changeDevelopers.bind(this);\r\n    }\r\n\r\n    changeDeleteBool = event => {\r\n        this.setState({confirmDelete: !this.state.confirmDelete})\r\n    };\r\n\r\n    changeManagerBool = event => {\r\n        this.setState({confirmManager: !this.state.confirmManager})\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.id]: event.target.value})\r\n    };\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({isLoading: true});\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            const attributes = await API.put(\"projects\", `/projects/${this.props.project.projectId}`, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                },\r\n                body: {\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    projectStatus: this.state.projectStatus\r\n                }\r\n            });\r\n            //console.log(attributes);\r\n        } catch (error) {\r\n            console.error(error.response);\r\n            this.setState({isLoading: false});\r\n        }\r\n        this.setState({isLoading: false});\r\n    };\r\n\r\n    deleteProject = async event => {\r\n        event.preventDefault();\r\n        this.setState({isDeleteLoading: true});\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            await API.del(\"projects\", `/projects/${this.props.match.params.id}`, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error.response);\r\n        }\r\n        this.setState({isDeleteLoading: false});\r\n        this.props.hist.push('/');\r\n    };\r\n\r\n    changeDevelopers = async event => {\r\n        event.preventDefault();\r\n        this.setState({isChangeLoading: true});\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            await API.put(\"projects\", `/projects/${this.props.match.params.id}`, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                },\r\n                body: {\r\n                    developers: this.state.developers,\r\n                    usernames: this.state.usernames\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error.response);\r\n            this.setState({isChangeLoading: false});\r\n        }\r\n    };\r\n\r\n    setStatus(status) {\r\n        this.setState({projectStatus: status});\r\n    };\r\n\r\n    setNewRoles(projectManager, developers) {\r\n        this.setState({\r\n            changeManager: true,\r\n            projectManager: projectManager,\r\n            developers: developers\r\n        });\r\n    }\r\n\r\n    setNewDevelopers(developers, usernames) {\r\n        this.setState({\r\n            developers: developers,\r\n            usernames: usernames\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ProjectSettings\">\r\n                <PageHeader>Project Settings</PageHeader>\r\n                <ListGroup>\r\n                    <ListGroupItem>\r\n                        <h2>Change project details</h2>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup controlId=\"title\">\r\n                                <ControlLabel>Title</ControlLabel>{\": \"}\r\n                                <FormControl value={this.state.title}\r\n                                             placeholder={this.props.project.title}\r\n                                             onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"description\">\r\n                                <ControlLabel>Description</ControlLabel>{\": \"}\r\n                                <FormControl value={this.state.description}\r\n                                             placeholder={this.props.project.description}\r\n                                             onChange={this.handleChange}\r\n                                             componentClass=\"textarea\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <StatusDropdown projectStatus={this.state.projectStatus} setStatus={this.setStatus}/>\r\n                            </FormGroup>\r\n                            <LoadingButton type=\"submit\"\r\n                                           isLoading={this.state.isLoading}\r\n                                           text=\"Change\"\r\n                                           loadingText=\"Changing...\" />\r\n                        </Form>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem>\r\n                        <Table responsive striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Role</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.projectRoles.map( (role, i) =>\r\n                                    <tr>\r\n                                        <td>{role.name}</td>\r\n                                        <td>{role.description}</td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </Table>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem>\r\n                        <Table responsive striped bordered ref=\"Users\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    <th>Username</th>\r\n                                    <th>Role</th>\r\n                                    <th>Skills</th>\r\n                                    <th>Email</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <ProjectUsers projectManager={this.state.projectManager}\r\n                                              developers={this.state.developers}\r\n                                              usernames={this.state.usernames}\r\n                                              siteUsers={this.props.siteUsers}\r\n                                              hist={this.props.hist}\r\n                                              match={this.props.match}\r\n                                              user={this.props.user}\r\n                                              checkTokens={this.props.checkTokens}\r\n                                              setNewDevelopers={this.setNewDevelopers}\r\n                                              changeDevelopers={this.changeDevelopers} />\r\n                            </tbody>\r\n                        </Table>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem>\r\n\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n\r\n                <Button bsStyle=\"danger\"\r\n                        onClick={this.changeDeleteBool}>\r\n                    Delete Project?\r\n                </Button>\r\n\r\n                <Modal className=\"delete-prompt\"\r\n                       show={this.state.confirmDelete} >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Are you sure?</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        Deleting is permanent and you <strong>won't</strong> be able to get your project\r\n                        back.\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.changeDeleteBool}>Cancel</Button>\r\n                        <LoadingButton bsStyle=\"danger\"\r\n                                       onClick={this.deleteProject}\r\n                                       isLoading={this.state.isDeleteLoading}\r\n                                       text=\"Delete\"\r\n                                       loadingText=\"Deleting...\" />\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ProjectUsers extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            changeManager: false,\r\n            newProjectManager: \"\"\r\n        }\r\n    }\r\n\r\n    handleClick = (username, event) => {\r\n        this.setState({\r\n            changeManager: true,\r\n            newProjectManager: username\r\n        });\r\n    };\r\n\r\n    handleHide = event => {\r\n        this.setState({\r\n            changeManager: false,\r\n            newProjectManager: \"\"\r\n        });\r\n    };\r\n\r\n    handleRemove = async (developer, event) => {\r\n        const developers = this.props.developers;\r\n        const usernames = this.props.usernames;\r\n\r\n        developers.splice(developers.indexOf(developer), 1);\r\n        usernames.splice(usernames.indexOf(developer), 1);\r\n\r\n        await this.props.setNewDevelopers(developers, usernames);\r\n        await this.props.changeDevelopers(event);\r\n    };\r\n\r\n    handleChange = async event => {\r\n        event.preventDefault();\r\n        this.setState({isChangeLoading: true});\r\n\r\n        const developers = this.props.developers;\r\n        developers.splice(developers.indexOf(this.state.newProjectManager), 1, this.props.projectManager);\r\n        //console.log(developers);\r\n        try {\r\n            await this.props.checkTokens();\r\n            await API.put(\"projects\", `/projects/${this.props.match.params.id}`, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                },\r\n                body: {\r\n                    projectManager: this.state.newProjectManager,\r\n                    developers: developers\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n            this.setState({isChangeLoading: false});\r\n        }\r\n        if (this.props.user.admin) {\r\n            this.setState({changeManager: false});\r\n            window.location.reload();\r\n        } else {\r\n            this.props.hist.push('/');\r\n        }\r\n    };\r\n\r\n    renderModal() {\r\n        return (\r\n            <Modal className={\"change-manager-prompt-\" + this.state.newProjectManager}\r\n                   show={this.state.changeManager} >\r\n                <Modal.Header>\r\n                    <Modal.Title>Are you sure?</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    Once you do this you will <strong>not</strong> be able to change it back (only\r\n                    <i>{\" \" + this.state.newProjectManager}</i> or an admin can).\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button onClick={this.handleHide}>Cancel</Button>\r\n                    <LoadingButton bsStyle=\"danger\"\r\n                                   onClick={this.handleChange}\r\n                                   isLoading={this.state.isLoading}\r\n                                   text=\"Change\"\r\n                                   loadingText=\"Changing...\" />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const siteUsers = this.props.siteUsers;\r\n        const siteUsernames = [];\r\n        siteUsers.map( (user) => {\r\n            siteUsernames.push(user.Username);\r\n        });\r\n\r\n        return this.props.usernames.map( (username, i) => {\r\n            const role = (username === this.props.projectManager) ? \"Project Manager\" : \"Developer\";\r\n                let user = {};\r\n                let email = \"unknown\";\r\n                let skills = \"unknown\";\r\n                if (siteUsernames.indexOf(username) > -1) {\r\n                    user = siteUsers[siteUsernames.indexOf(username)];\r\n                    user.Attributes.map( (attribute) => {\r\n                        if (attribute.Name === \"email\") email = attribute.Value;\r\n                        if (attribute.Name === \"custom:skills\") skills = attribute.Value;\r\n                    });\r\n                }\r\n                return (\r\n                    <tr>\r\n                        <td>{(i+1).toString()}</td>\r\n                        <td>{username}</td>\r\n                        <td>\r\n                            {role}\r\n                            {role !== \"Project Manager\" ?\r\n                                <Button onClick={(event) => this.handleClick(username, event)}\r\n                                        style={{float: \"right\"}}>\r\n                                    Make Project Manager\r\n                                </Button>\r\n                                : null\r\n                            }\r\n                        </td>\r\n                        <td>{skills}</td>\r\n                        <td>{email}</td>\r\n                        <td>\r\n                            <Button onClick={(event) => this.handleRemove(username, event)}>\r\n                                <Glyphicon glyph=\"remove\"/>\r\n                            </Button>\r\n                        </td>\r\n                        {this.renderModal()}\r\n                    </tr>\r\n                );\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nclass StatusDropdown extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            projectStatuses: [\"pending\", \"active\", \"completed\"],\r\n            selected: this.props.projectStatus\r\n        }\r\n    }\r\n\r\n    handleSelect = (eventKey, event) => {\r\n        this.setState({selected: this.state.projectStatuses[eventKey]});\r\n        this.props.setStatus(this.state.projectStatuses[eventKey]);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <DropdownButton dropup title={this.state.selected}>\r\n                {this.state.projectStatuses.map( (status, i) => (\r\n                    <MenuItem key={i} eventKey={i} onSelect={this.handleSelect}>\r\n                        {status}\r\n                    </MenuItem>\r\n                ))}\r\n            </DropdownButton>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport \"./Project.css\";\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            project: this.props.project,\r\n            usernames: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const siteUsernames = [];\r\n        this.props.siteUsers.map( (user) => {\r\n            siteUsernames.push(user.Username);\r\n        });\r\n        this.setState({usernames: siteUsernames});\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    renderUsers() {\r\n        return this.state.project.developers.map( (username, i) =>\r\n            <ListGroupItem key={i.toString()} header={username}>\r\n                {!this.props.siteUsers[this.state.usernames.indexOf(username)] ?\r\n                    <p>Skills{\": unknown\"}</p>\r\n                    :\r\n                    this.props.siteUsers[this.state.usernames.indexOf(username)].Attributes.map((attribute) => {\r\n                        if (attribute.Name === \"custom:skills\") return <p>Skills{\": \" + attribute.Value}</p>;\r\n                    })\r\n                }\r\n            </ListGroupItem>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.isLoading ? <h1>Loading...</h1> :\r\n                    <div>\r\n                        <h1>{this.state.project.title}</h1>\r\n                        <h2>{this.state.project.description}</h2>\r\n                        <h3>Project manager: {this.state.project.projectManager}</h3>\r\n                        <ListGroup className=\"developers\">\r\n                            <h4>Developers:</h4>\r\n                            {this.renderUsers()}\r\n                        </ListGroup>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Tab, Tabs} from \"react-bootstrap\";\r\nimport ProjectSettings from \"./ProjectSettings\";\r\nimport ProjectView from \"./ProjectView\";\r\nimport {API} from \"aws-amplify\";\r\nimport \"./Project.css\";\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            siteUsers: [],\r\n            project: {}\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.props.checkTokens();\r\n            const project = await this.getProject();\r\n            const users = await API.get(\"projects\", \"/users/list\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                }\r\n            });\r\n            //console.log(users.Users);\r\n\r\n            this.setState({\r\n                isLoading: false,\r\n                siteUsers: users.Users,\r\n                project\r\n            });\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n\r\n    getProject() {\r\n        return API.get(\"projects\", `/projects/${this.props.match.params.id}`, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n            }\r\n        });\r\n    }\r\n\r\n    renderLoading() {\r\n        return(<h1>Loading...</h1>);\r\n    }\r\n\r\n    renderProject(){\r\n        return (\r\n            <div>\r\n                {this.state.project.projectManager === this.props.user.username || this.props.user.admin ?\r\n                    <Tabs id=\"project-tab\">\r\n                        <Tab eventKey={1} title=\"View\">\r\n                            <ProjectView project={this.state.project} siteUsers={this.state.siteUsers} />\r\n                        </Tab>\r\n                        <Tab eventKey={2} title=\"Settings\">\r\n                            <ProjectSettings project={this.state.project}\r\n                                             hist={this.props.history}\r\n                                             match={this.props.match}\r\n                                             user={this.props.user}\r\n                                             siteUsers={this.state.siteUsers}\r\n                                             checkTokens={this.props.checkTokens} />\r\n                        </Tab>\r\n                    </Tabs> :\r\n                    <ProjectView project={this.state.project}/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"Project\">\r\n                {this.state.isLoading ? this.renderLoading() : this.renderProject()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {ListGroup, ListGroupItem, PageHeader} from \"react-bootstrap\";\r\nimport {API} from \"aws-amplify\";\r\n\r\nexport default class Users extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            siteUsers: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.props.checkTokens();\r\n            const users = await API.get(\"projects\", \"/users/list\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                }\r\n            });\r\n            this.setState({siteUsers: users.Users});\r\n        } catch (error) {\r\n            console.error(error.response)\r\n        }\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    renderUserList(users) {\r\n        return users.map( (user) =>\r\n             <ListGroupItem key={user.Username} header={user.Username}>\r\n\r\n                {user.Attributes.map( (attribute) => {\r\n                    if (attribute.Name === \"email\") return <p>Email: {attribute.Value}</p>;\r\n                    else if (attribute.Name === \"custom:skills\") return <p>Skills: {attribute.Value}</p>;\r\n                })}\r\n\r\n                <p>Created at: {new Date(user.UserCreateDate).toLocaleString()}</p>\r\n            </ListGroupItem>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"Users\">\r\n                <PageHeader>Current Users</PageHeader>\r\n                <ListGroup className=\"users-list\">\r\n                    {!this.state.isLoading && this.state.siteUsers && this.renderUserList(this.state.siteUsers)}\r\n                </ListGroup>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default () =>\r\n    <div className=\"NotFound\">\r\n        <h3>Sorry, this page does not exist.</h3>\r\n    </div>","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\n// the Route component takes a prop called component that represents the comp that will be rendered when a matching\r\n// route is found. childProps will be sent to this comp\r\n// it can also take a render method in place of component, so we control whats passed in to our component\r\n// so we can create a component that returns a Route and takes a component and childProps prop. This allows us to\r\n// pass in the component we want rendered and the props we want applied\r\n// props is what is Route passes us, cProps is what we set\r\nexport default ({component: C, props: cProps, ...rest}) =>\r\n    <Route {...rest} render={props => <C {...props} {...cProps} />} />;","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\n//import AuthenticatedRoute from \"./components/AuthenticatedRoute\"\r\n//import UnauthenticatedRoute from \"./components/UnauthenticatedRoute\"\r\nimport Home from \"./containers/Home\";\r\nimport Login from \"./containers/Login\";\r\nimport Register from \"./containers/Register\";\r\nimport Account from \"./containers/Account\";\r\nimport NewProject from \"./containers/NewProject\";\r\nimport Project from \"./containers/Project\";\r\nimport Users from \"./containers/Users\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport AppliedRoute from \"./components/AppliedRoute\";\r\n\r\nexport default ({childProps}) =>\r\n    <Switch>\r\n        <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\r\n        <AppliedRoute path=\"/login\" exact component={Login} props={childProps} />\r\n        <AppliedRoute path=\"/register\" exact component={Register} props={childProps} />\r\n        <AppliedRoute path=\"/account\" exact component={Account} props={childProps} />\r\n        <AppliedRoute path=\"/projects/new\" exact component={NewProject} props={childProps} />\r\n        <AppliedRoute path=\"/projects/:id\" exact component={Project} props={childProps} />\r\n        <AppliedRoute path=\"/users\" exact component={Users} props={childProps} />\r\n        <AppliedRoute component={NotFound} />\r\n    </Switch>","import React, {Component, Fragment} from 'react';\r\nimport {Navbar, Nav, NavItem} from \"react-bootstrap\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport Routes from \"./Routes\";\r\nimport './App.css';\r\nimport {API} from \"aws-amplify\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isAuthenticated: false,\r\n            isAuthenticating: true,\r\n            user: null\r\n        };\r\n        this.setCurrentUser = this.setCurrentUser.bind(this);\r\n        this.checkTokens = this.checkTokens.bind(this);\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            // this will be used to get the current user from a saved session\r\n            let user = JSON.parse(localStorage.getItem(\"ProjectManagerSession\"));\r\n            if (user === null) {\r\n                console.log(\"User is null\");\r\n                // no stored user means user has not logged in/authenticated\r\n                user = {\r\n                    admin: false\r\n                };\r\n                this.setCurrentUser({user});\r\n                this.userHasAuthenticated(false);\r\n                this.setState({isAuthenticating: false});\r\n                return;\r\n            }\r\n\r\n            this.setCurrentUser(user);\r\n            await this.checkTokens();\r\n            this.userHasAuthenticated(true);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n        this.setState({isAuthenticating: false});\r\n    };\r\n\r\n    // function to check if the given users tokens have expired, and if so refresh them and change the current user\r\n    async checkTokens () {\r\n        console.log(\"called check tokens\");\r\n\r\n        const serverTime = Math.floor(new Date()/1000) - this.state.user.auth.ClockDrift;\r\n        if (serverTime > this.state.user.auth.Expiration) {\r\n            try {\r\n                const refreshUser = this.state.user;\r\n                const auth = (await API.get(\"projects\", \"/users/refresh\", {\r\n                    queryStringParameters: {\r\n                        RefreshToken: refreshUser.auth.RefreshToken\r\n                    }\r\n                })).body;\r\n                //console.log(auth);\r\n\r\n                refreshUser.auth.AccessToken = auth.AccessToken;\r\n                refreshUser.auth.IdToken = auth.IdToken;\r\n                refreshUser.auth.IssuedAt = auth.IssuedAt;\r\n                refreshUser.auth.Expiration = auth.Expiration;\r\n                refreshUser.auth.ClockDrift = Math.floor(new Date()/1000) - auth.IssuedAt;\r\n\r\n                console.log(\"Refreshed Access and Id tokens\");\r\n                await this.setState(refreshUser);\r\n            } catch (error) {\r\n                console.log(error.response);\r\n            }\r\n        }\r\n        return;\r\n    };\r\n\r\n    userHasAuthenticated = authenticated => {\r\n        this.setState({isAuthenticated: authenticated});\r\n    };\r\n\r\n    setCurrentUser = user => {\r\n        this.setState({user: user});\r\n    };\r\n\r\n    handleLogout = async event => {\r\n        event.preventDefault();\r\n        try {\r\n            await this.checkTokens();\r\n            await API.post(\"projects\", \"/logout\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.state.user.auth.AccessToken\r\n                }\r\n            });\r\n            localStorage.removeItem(\"ProjectManagerSession\");\r\n            this.userHasAuthenticated(false);\r\n            this.setCurrentUser(null);\r\n            this.props.history.push(\"/\");\r\n        } catch (error) {\r\n            console.error(error.response);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const childProps = {\r\n            isAuthenticated: this.state.isAuthenticated,\r\n            user: this.state.user,\r\n            setCurrentUser: this.setCurrentUser,\r\n            userHasAuthenticated: this.userHasAuthenticated,\r\n            checkTokens: this.checkTokens\r\n        };\r\n\r\n        return (\r\n            !this.state.isAuthenticating &&\r\n            <div className=\"App\">\r\n                <Navbar fluid collapseOnSelect>\r\n                    <Navbar.Header>\r\n                        <Navbar.Brand>\r\n                            <Link to=\"/\"><h2>Project Manager</h2></Link>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle/>\r\n                    </Navbar.Header>\r\n                    <Navbar.Collapse>\r\n                        <Nav pullRight>\r\n                            {this.state.isAuthenticated && this.state.user !== null ?\r\n                                <Fragment>\r\n                                    <LinkContainer to=\"/users\">\r\n                                        <NavItem>Users</NavItem>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/account\">\r\n                                        <NavItem>{this.state.user.username}</NavItem>\r\n                                    </LinkContainer>\r\n                                    <NavItem onClick={this.handleLogout}>Logout</NavItem>\r\n                                </Fragment>\r\n                                : <Fragment>\r\n                                    <LinkContainer to=\"/login\">\r\n                                        <NavItem>Login</NavItem>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/register\">\r\n                                        <NavItem>Register</NavItem>\r\n                                    </LinkContainer>\r\n                                </Fragment>\r\n                            }\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Routes childProps={childProps}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {\r\n    s3: {\r\n        REGION: \"eu-west-2\",\r\n        BUCKET: \"project-management-projects\"\r\n    },\r\n    apiGateway: {\r\n        REGION: \"eu-west-2\",\r\n        URL: \"https://z8ogont2v6.execute-api.eu-west-2.amazonaws.com/dev\"\r\n    },\r\n    cognito: {\r\n        REGION: \"eu-west-2\",\r\n        USER_POOL_ID: \"eu-west-2_7DRbUQOk6\",\r\n        APP_CLIENT_ID: \"27cus2iiajkktqa6tk984jqgqa\",\r\n        IDENTITY_POOL_ID: \"eu-west-2:16e65f15-a1f6-4c57-b896-108cdd4593b6\"\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Amplify from \"aws-amplify\";\r\nimport config from \"./config\";\r\n\r\nAmplify.configure({\r\n    /*\r\n    Auth: {\r\n        mandatorySignIn: true,\r\n        region: config.cognito.REGION,\r\n        userPoolId: config.cognito.USER_POOL_ID,\r\n        identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n    },\r\n    */\r\n    Storage: {\r\n        region: config.s3.REGION,\r\n        bucket: config.s3.BUCKET,\r\n        identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n    },\r\n    API: {\r\n        endpoints: [{\r\n            name: \"projects\",\r\n            region: config.apiGateway.REGION,\r\n            endpoint: config.apiGateway.URL\r\n        }]\r\n    }\r\n});\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}