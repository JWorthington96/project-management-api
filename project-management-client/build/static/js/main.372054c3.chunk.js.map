{"version":3,"sources":["containers/Home.js","components/LoadingButton.js","containers/Login.js","containers/Register.js","containers/Account.js","components/DynamicDeveloperForm.js","containers/NewProject.js","containers/ProjectSettings.js","containers/ProjectView.js","containers/Project.js","containers/Users.js","containers/NotFound.js","components/AppliedRoute.js","Routes.js","App.js","serviceWorker.js","config.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addProject","event","preventDefault","history","push","handleProjectClick","currentTarget","getAttribute","state","isLoading","projects","allProjects","isAuthenticated","checkTokens","console","log","user","admin","API","get","headers","Authorization","auth","AccessToken","queryStringParameters","username","setState","error","_context","t0","response","map","project","react_default","a","createElement","lib","key","projectId","to","concat","ListGroupItem","header","title","Date","createdAt","toLocaleString","projectManager","className","PageHeader","ButtonToolbar","Button","onClick","Glyphicon","glyph","ListGroup","renderProjectsList","Tabs","activeKey","onSelect","handleSelect","id","Tab","eventKey","renderProjects","renderAllProjects","renderLander","Component","components_LoadingButton","_ref","text","loadingText","_ref$disabled","disabled","objectWithoutProperties","assign","Login","context","handleChange","defineProperty","target","value","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","e","attributes","wrap","prev","next","post","body","Username","Password","password","sent","UserAttributes","attribute","Name","ClockDrift","Math","floor","IssuedAt","localStorage","setItem","JSON","stringify","userHasAuthenticated","setCurrentUser","data","message","showConfirm","incorrect","stop","_x","apply","arguments","handleDismiss","isConfirmed","handleResend","_ref2","_callee2","_context2","_x2","handleConfirmSubmit","_ref3","_callee3","_context3","isConfirmLoading","ConfirmationCode","code","alert","_x3","handleHide","bind","assertThisInitialized","usernameLen","length","passLen","getValidationBoolean","tooltip","Tooltip","onSubmit","FormGroup","controlId","validationState","getValidationState","ControlLabel","FormControl","type","placeholder","onChange","Feedback","OverlayTrigger","placement","overlay","react","Alert","bsStyle","onDismiss","Form","Register","newUser","email","skills","Email","Skills","confirmPass","emailLen","userLen","autoFocus","HelpBlock","Modal","show","onHide","Header","Body","Footer","Account","handleCheckbox","changePassword","handleSubmitEmail","handleSubmitSkills","input","Value","emailLoading","skillsLoading","put","_x4","handleSubmitPassword","_ref4","_callee4","_context4","Auth","oldPassword","newPassword","_x5","passwordLoading","_this2","oldLen","newLen","usernameTooltip","passwordTooltip","inline","Checkbox","DynamicDeveloperForm","setDevelopers","currentDevelopers","confirmDevelopers","currentId","addDeveloper","changeDeveloper","deleteDeveloper","developer","devs","undefined","developers","splice","DynamicDeveloperForm_DeveloperFormList","DynamicDeveloperForm_NewDeveloperForm","siteUsers","DeveloperFormList","Number","handleDelete","_this3","i","toString","NewDeveloperForm","_this4","newDeveloper","handleAdd","managerError","includes","handleIgnore","handleClose","validateForm","renderModal","NewProject","boolean","usernames","isSubmitting","createProject","description","users","Users","componentClass","DynamicDeveloperForm_DynamicDeveloperForm","name","ProjectSettings","changeDeleteBool","confirmDelete","changeManagerBool","confirmManager","projectStatus","deleteProject","isDeleteLoading","del","match","params","hist","changeDevelopers","isChangeLoading","changeManager","projectRoles","roles","Role","setStatus","setNewRoles","setNewDevelopers","status","ProjectSettings_StatusDropdown","Table","responsive","striped","bordered","role","ref","ProjectSettings_ProjectUsers","Title","ProjectUsers","handleClick","newProjectManager","handleRemove","indexOf","_ref5","_callee5","_context5","window","location","reload","_x6","siteUsernames","Attributes","style","float","StatusDropdown","selected","projectStatuses","_this5","DropdownButton","dropup","MenuItem","Project","renderUsers","getProject","ProjectView_Project","ProjectSettings_ProjectSettings","renderLoading","renderProject","UserCreateDate","renderUserList","containers_NotFound","AppliedRoute","C","component","cProps","rest","Route","render","Routes","childProps","Switch","path","exact","NotFound","App","authenticated","handleLogout","removeItem","isAuthenticating","parse","getItem","Expiration","refreshUser","RefreshToken","IdToken","Navbar","fluid","collapseOnSelect","Brand","Link","Toggle","Collapse","Nav","pullRight","NavItem","withRouter","Boolean","hostname","config","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Amplify","configure","Storage","region","bucket","identityPoolId","endpoints","endpoint","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.372054c3.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {PageHeader, ButtonToolbar, Button, Glyphicon, ListGroup, ListGroupItem, Tabs, Tab} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {API} from \"aws-amplify\";\r\nimport \"./Home.css\";\r\n\r\nexport default class Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            projects: [],\r\n            allProjects: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (!this.props.isAuthenticated) return;\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            console.log(this.props.user);\r\n\r\n            let allProjects = [];\r\n            if (this.props.user.admin) {\r\n                allProjects = await API.get(\"projects\", \"/projects/all\", {\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                    }\r\n                });\r\n            }\r\n            const projects = await API.get(\"projects\", \"/projects\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                },\r\n                queryStringParameters: {\r\n                    username: this.props.user.username\r\n                }\r\n            });\r\n            console.log(projects);\r\n            this.setState({\r\n                projects: projects,\r\n                allProjects: allProjects\r\n            });\r\n        } catch (error) {\r\n            console.error(error.response);\r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    addProject = event => {\r\n        event.preventDefault();\r\n        this.props.history.push(\"/projects/new\");\r\n    };\r\n\r\n    handleProjectClick = event => {\r\n        event.preventDefault();\r\n        this.props.push(event.currentTarget.getAttribute(\"href\"));\r\n    };\r\n    \r\n    renderProjectsList(projects){\r\n        return projects.map( (project) =>\r\n                <LinkContainer key={project.projectId} to={`/projects/${project.projectId}`}>\r\n                    <ListGroupItem header={project.title}>\r\n                        {\"Created: \" + new Date(project.createdAt).toLocaleString()} <br/>\r\n                        Project manager: {project.projectManager}\r\n                    </ListGroupItem>\r\n                </LinkContainer>\r\n        );\r\n    }\r\n\r\n    renderLander() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <div className=\"lander\">\r\n                    <h1>Project Manager</h1>\r\n                    <p>A project management app</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderProjects() {\r\n        return (\r\n            <div className=\"projects\">\r\n                <PageHeader>Your Projects</PageHeader>\r\n                <ButtonToolbar className=\"toolbar\">\r\n                    <Button onClick={this.addProject}>\r\n                        <Glyphicon glyph=\"plus\" />\r\n                    </Button>\r\n                </ButtonToolbar>\r\n                <ListGroup className=\"projects-list\">\r\n                    {!this.state.isLoading && this.renderProjectsList(this.state.projects)}\r\n                </ListGroup>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAllProjects() {\r\n        return (\r\n            <div className=\"all-projects\">\r\n                <PageHeader>All Projects</PageHeader>\r\n                <ListGroup className=\"projects-list\">\r\n                    {!this.state.isLoading && this.renderProjectsList(this.state.allProjects)}\r\n                </ListGroup>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n                {this.props.user.admin ?\r\n                <Tabs activeKey={this.state.activeKey}\r\n                      onSelect={this.handleSelect}\r\n                      id=\"tabs\" >\r\n                    <Tab eventKey={1} title=\"Your projects\">\r\n                        {this.renderProjects()}\r\n                    </Tab>\r\n                    <Tab eventKey={2} title=\"All projects\">\r\n                        {this.renderAllProjects()}\r\n                    </Tab>\r\n                </Tabs> :\r\n                this.props.isAuthenticated ? this.renderProjects() : this.renderLander()}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, Glyphicon} from \"react-bootstrap\";\r\nimport \"./LoadingButton.css\";\r\n\r\nexport default ({\r\n    isLoading,\r\n    text,\r\n    loadingText,\r\n    className = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) =>\r\n    <Button\r\n        className={`LoadingButton $(className)`}\r\n        disabled={disabled || isLoading}\r\n        {...props}\r\n    >\r\n        {!isLoading ? text: loadingText}\r\n        {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\r\n    </Button>;","import React, {Component, Fragment} from \"react\";\r\nimport {\r\n    Alert,\r\n    Button,\r\n    ControlLabel,\r\n    FormGroup,\r\n    FormControl,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    Form,\r\n    Modal\r\n} from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport {API} from \"aws-amplify\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\n\r\nexport default class Login extends Component {\r\n    constructor(props, context){\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            isLoading: false,\r\n            isConfirmLoading: false,\r\n            showConfirm: false,\r\n            incorrect: false,\r\n            username: '',\r\n            password: '',\r\n            code: ''\r\n        };\r\n    }\r\n\r\n    getValidationBoolean() {\r\n        const usernameLen = this.state.username.length;\r\n        const passLen = this.state.password.length;\r\n        return (usernameLen > 0 && passLen > 8);\r\n    };\r\n\r\n    getValidationState(){\r\n        return this.getValidationBoolean() ? 'success' : 'error';\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    };\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        this.setState({isLoading: true});\r\n\r\n        try {\r\n            // calling the sign in and get user methods on the backend\r\n            const response = (await API.post(\"projects\", \"/login\", {body: {\r\n                    Username: this.state.username,\r\n                    Password: this.state.password\r\n                }\r\n            })).body;\r\n            console.log(response);\r\n\r\n            const attributes = (await API.get(\"projects\", \"/users\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + response.AccessToken\r\n                }\r\n            })).body;\r\n            console.log(attributes);\r\n\r\n            const user = {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                attributes: attributes.UserAttributes,\r\n                auth: response\r\n            };\r\n\r\n            user.attributes.map( (attribute) => {\r\n                if (attribute.Name === \"custom:admin\") user[\"admin\"] = true;\r\n            });\r\n\r\n            // calculating the clock drift from the server\r\n            user.auth.ClockDrift = Math.floor(new Date()/1000) - user.auth.IssuedAt;\r\n\r\n            localStorage.setItem(\"ProjectManagerSession\", JSON.stringify(user));\r\n            this.props.userHasAuthenticated(true);\r\n            // this will store the user in App.js for use in the site\r\n            await this.props.setCurrentUser(user);\r\n            this.props.history.push(\"/\");\r\n        } catch (error) {\r\n            if (error.response.data.body.message === \"User is not confirmed.\") {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    showConfirm: true\r\n                });\r\n            } else if (error.message === \"No username/password combination found\") {\r\n                this.setState({incorrect: true});\r\n                // TODO: add prompt that shows the username or pass was incorrect\r\n            } else if (error.message === \"User does not exist.\") {\r\n                this.props.history.push('/register');\r\n            } else {\r\n                console.error(error.response);\r\n                this.setState({isLoading: false});\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDismiss = event => {\r\n        this.setState({isConfirmed: true});\r\n    };\r\n\r\n    handleResend = async event => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await API.post(\"projects\", \"register/resend\", {\r\n                Username: this.state.username\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    handleConfirmSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({isConfirmLoading: true});\r\n\r\n        try {\r\n            await API.post(\"projects\", \"/register/confirm\", {body: {\r\n                    Username: this.state.username,\r\n                    ConfirmationCode: this.state.code\r\n                }\r\n            });\r\n\r\n            alert(\"Successfully confirmed email! You can now log in.\");\r\n            this.setState({\r\n                showConfirm: false,\r\n                isConfirmLoading: false\r\n            });\r\n        } catch (error) {\r\n            console.error(error.response);\r\n            this.setState({isConfirmLoading: false});\r\n        }\r\n    };\r\n\r\n    handleHide = event => {\r\n        this.setState({showConfirm: false});\r\n    };\r\n\r\n    render() {\r\n        const tooltip =\r\n            <Tooltip id=\"password-tooltip\">\r\n                Password is at least 8 characters long.\r\n            </Tooltip>;\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormGroup\r\n                        controlId=\"username\"\r\n                        validationState={this.getValidationState()}\r\n                    >\r\n                        <ControlLabel>Username</ControlLabel>\r\n                        <FormControl\r\n                            type=\"username\"\r\n                            placeholder=\"Your username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <FormControl.Feedback />\r\n                    </FormGroup>\r\n\r\n                    <OverlayTrigger placement=\"bottom\" overlay={tooltip}>\r\n                        <FormGroup\r\n                            controlId=\"password\"\r\n                            validationState={this.getValidationState()}\r\n                        >\r\n                            <ControlLabel>Password</ControlLabel>\r\n                            <FormControl\r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <FormControl.Feedback />\r\n                        </FormGroup>\r\n                    </OverlayTrigger>\r\n\r\n                    <LoadingButton\r\n                        type=\"submit\"\r\n                        disabled={!this.getValidationBoolean()}\r\n                        isLoading={this.state.isLoading}\r\n                        text=\"Login\"\r\n                        loadingText=\"Logging in...\"\r\n                    />\r\n\r\n                    {!this.state.showConfirm ? null\r\n                        : <Fragment>\r\n                            <Alert className=\"alert\" bsStyle=\"danger\" onDismiss={this.handleDismiss}>\r\n                                <h3>Thank you again for registering!</h3>\r\n                                <p>Unfortunately you still haven't confirmed your account. Please check your email to\r\n                                    find the code to confirm your account before signing in, alternatively, if that\r\n                                    doesn't work or you lost the email, click the button below to resend the\r\n                                    confirmation email.</p>\r\n                                <Form onSubmit={this.handleConfirmSubmit}>\r\n                                    <FormGroup controlId=\"code\">\r\n                                        <ControlLabel>Code:</ControlLabel>\r\n                                        <FormControl value={this.state.code}\r\n                                                     onChange={this.handleChange} />\r\n                                    </FormGroup>\r\n                                    <LoadingButton type=\"submit\"\r\n                                                   isLoading={this.state.isConfirmLoading}\r\n                                                   text=\"Confirm\"\r\n                                                   loadingText=\"Confirming...\" />\r\n                                </Form>\r\n                                <br/>\r\n                                <p>\r\n                                    <Button onClick={this.handleResend}>Resend email</Button>\r\n                                    <span>  or  </span>\r\n                                    <Button onClick={this.handleDismiss}>Dismiss</Button>\r\n                                </p>\r\n                            </Alert>\r\n                        </Fragment>}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {ControlLabel, Form, FormGroup, FormControl, HelpBlock, Modal, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\nimport \"./Register.css\";\r\nimport {API} from \"aws-amplify\";\r\n\r\nexport default class Register extends Component {\r\n    constructor(props, context){\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            isConfirmed: false,\r\n            isLoading: false,\r\n            isConfirmLoading: false,\r\n            showConfirm: false,\r\n            email: '',\r\n            skills: '',\r\n            username: '',\r\n            password: '',\r\n            confirmPass: '',\r\n            code: '',\r\n            newUser: {}\r\n        };\r\n    }\r\n\r\n    getValidationState() {\r\n        const emailLen = this.state.email.length;\r\n        const userLen = this.state.username.length;\r\n        const passLen = this.state.password.length;\r\n        if (emailLen > 0 && userLen > 0 && passLen > 8 &&\r\n            this.state.confirmPass === this.state.password) return 'success';\r\n        else return 'error';\r\n    }\r\n\r\n    getValidationBoolean(){\r\n        return this.getValidationState() === 'success';\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({[event.target.id]: event.target.value})\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({isLoading: true});\r\n        try {\r\n            const newUser = {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                email: this.state.email,\r\n                skills: this.state.skills\r\n            };\r\n            await API.post(\"projects\", \"/register\", {body: {\r\n                    Username: newUser.username,\r\n                    Password: newUser.password,\r\n                    Email: newUser.email,\r\n                    Skills: newUser.skills\r\n                }\r\n            });\r\n\r\n            this.setState({newUser: newUser});\r\n            //this.props.history.push('/register/confirm');\r\n            this.setState({showConfirm: true});\r\n        } catch (error) {\r\n            //if (error.response.data.body === \"Password did not conform with password policy.\") alert(\"Password\");\r\n            console.error(error.response);\r\n            this.setState({isLoading: false});\r\n        }\r\n    };\r\n\r\n    handleConfirmSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({isConfirmLoading: true});\r\n        console.log(this.state.newUser);\r\n\r\n        try {\r\n            await API.post(\"projects\", \"/register/confirm\", {body: {\r\n                    Username: this.state.newUser.username,\r\n                    ConfirmationCode: this.state.code\r\n                }\r\n            });\r\n\r\n            alert(\"Successfully confirmed email! You can now log in.\");\r\n            this.props.history.push('/login');\r\n        } catch (error) {\r\n            console.error(error.response);\r\n            this.setState({isConfirmLoading: false});\r\n        }\r\n    };\r\n\r\n    handleHide = event => {\r\n        this.setState({showConfirm: false});\r\n    };\r\n\r\n    render() {\r\n        const tooltip =\r\n            <Tooltip>\r\n                Password must be at least 8 characters long with an upper case, lower case, number and symbol.\r\n            </Tooltip>;\r\n\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormGroup controlId=\"email\">\r\n                        <ControlLabel>Email</ControlLabel>\r\n                        <FormControl autoFocus\r\n                                     type=\"email\"\r\n                                     value={this.state.email}\r\n                                     onChange={this.handleChange}\r\n                                     placeholder=\"john.doe@example.com\"\r\n                        />\r\n                        <FormControl.Feedback />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup controlId=\"username\">\r\n                        <ControlLabel>Username</ControlLabel>\r\n                        <FormControl type=\"username\"\r\n                                     value={this.state.username}\r\n                                     onChange={this.handleChange}\r\n                                     placeholder=\"xXexampleXx\" />\r\n                        <FormControl.Feedback />\r\n                    </FormGroup>\r\n\r\n                    <OverlayTrigger placement=\"bottom\" overlay={tooltip}>\r\n                        <FormGroup\r\n                            controlId=\"password\"\r\n                            validationState={this.getValidationState()}\r\n                        >\r\n                            <ControlLabel>Password</ControlLabel>\r\n                            <FormControl\r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <FormControl.Feedback />\r\n                        </FormGroup>\r\n                    </OverlayTrigger>\r\n\r\n                    <FormGroup\r\n                        controlId=\"confirmPass\"\r\n                        validationState={this.getValidationState()}\r\n                    >\r\n                        <ControlLabel>Confirm password</ControlLabel>\r\n                        <FormControl\r\n                            type=\"password\"\r\n                            value={this.state.confirmPass}\r\n                            onChange={this.handleChange} />\r\n                        <FormControl.Feedback />\r\n                        <HelpBlock>Must match password</HelpBlock>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup controlId=\"skills\">\r\n                        <ControlLabel>Skills</ControlLabel>\r\n                        <FormControl value={this.state.skills}\r\n                                     onChange={this.handleChange} />\r\n                        <HelpBlock>Enter all your relevant skills, separated by commas</HelpBlock>\r\n                    </FormGroup>\r\n\r\n                    <LoadingButton\r\n                        type=\"submit\"\r\n                        disabled={!this.getValidationBoolean()}\r\n                        isLoading={this.state.isLoading}\r\n                        text=\"Register\"\r\n                        loadingText=\"Registering...\"\r\n                    />\r\n                </form>\r\n\r\n                <Modal show={this.state.showConfirm}\r\n                       onHide={this.handleHide} >\r\n                    <Form onSubmit={this.handleConfirmSubmit}>\r\n                        <Modal.Header>\r\n                            Confirm your username.\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Please enter the confirmation code sent to your email below:\r\n                            <FormGroup controlId=\"code\">\r\n                                <ControlLabel>Code:</ControlLabel>\r\n                                <FormControl value={this.state.code}\r\n                                             onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <LoadingButton type=\"submit\"\r\n                                           isLoading={this.state.isConfirmLoading}\r\n                                           text=\"Confirm\"\r\n                                           loadingText=\"Confirming...\"\r\n                            />\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Checkbox, ControlLabel, Form, FormGroup, FormControl, HelpBlock, ListGroup, ListGroupItem,\r\n        OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\nimport {Auth, API} from \"aws-amplify\";\r\n\r\nexport default class Account extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            changePassword: false,\r\n            isLoading: false,\r\n            emailLoading: false,\r\n            skillsLoading: false,\r\n            passwordLoading: false,\r\n            username: this.props.user.username,\r\n            email: \"\",\r\n            oldPassword: \"\",\r\n            newPassword: \"\",\r\n            skills: \"\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.user.attributes.map( (attribute) => {\r\n            if (attribute.Name === \"email\") this.setState({email: attribute.Value});\r\n            if (attribute.Name === \"custom:skills\") this.setState({skills: attribute.Value});\r\n        });\r\n    }\r\n\r\n    handleCheckbox = event => {\r\n        this.setState({changePassword: !this.state.changePassword});\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    };\r\n\r\n    handleSubmitEmail = async event => {\r\n        await this.handleSubmit(event, true);\r\n    };\r\n\r\n    handleSubmitSkills = async event => {\r\n        await this.handleSubmit(event, false);\r\n    };\r\n\r\n    handleSubmit = async (event, email) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const input = {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                },\r\n                body: {\r\n                    AccessToken: this.props.user.auth.AccessToken,\r\n                    UserAttributes: [\r\n                        {\r\n                            Name: \"\",\r\n                            Value: \"\"\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n            if (email) {\r\n                this.setState({emailLoading: true});\r\n                input.body.UserAttributes.Name = \"email\";\r\n                input.body.UserAttributes.Value = this.state.email;\r\n            } else {\r\n                this.setState({skillsLoading: true});\r\n                input.body.UserAttributes.Name = \"custom:skills\";\r\n                input.body.UserAttributes.Value = this.state.email;\r\n            }\r\n            await this.props.checkTokens();\r\n            await API.put(\"projects\", \"/users\", input);\r\n        } catch (error) {\r\n            this.setState({\r\n                emailLoading: false,\r\n                skillsLoading: false\r\n            });\r\n            console.error(error.response);\r\n        }\r\n\r\n        this.setState({\r\n            emailLoading: false,\r\n            skillsLoading: false\r\n        });\r\n    };\r\n\r\n    handleSubmitPassword = async event => {\r\n        event.preventDefault();\r\n        this.setState({isLoading: true});\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            await Auth.changePassword(this.props.user, this.state.oldPassword, this.state.newPassword);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    };\r\n\r\n    getValidationBoolean() {\r\n        const oldLen = this.state.oldPassword.length;\r\n        const newLen = this.state.newPassword.length;\r\n        return (oldLen > 12 && newLen > 12);\r\n    }\r\n\r\n    getValidationState() {\r\n        return this.getValidationBoolean() ? 'success' : 'error';\r\n    }\r\n\r\n    render() {\r\n        const usernameTooltip = (\r\n            <Tooltip id=\"usernameTooltip\">\r\n                Cannot change username.\r\n            </Tooltip>\r\n        );\r\n        const passwordTooltip = (\r\n            <Tooltip id=\"passwordTooltip\">\r\n                Password must be at least <strong>12 characters</strong>, contain at least\r\n                <strong>one capital and symbol</strong>.\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Account\">\r\n                <ListGroup>\r\n                    <ListGroupItem>\r\n                        <FormGroup>\r\n                            <ControlLabel>Username:</ControlLabel>\r\n                            <OverlayTrigger placement=\"bottom\"\r\n                                            overlay={usernameTooltip}>\r\n                                <FormControl value={this.state.username}\r\n                                             disabled={true} />\r\n                            </OverlayTrigger>\r\n                        </FormGroup>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <Form inline onSubmit={this.handleSubmit}>\r\n                            <FormGroup controlId=\"email\">\r\n                                <ControlLabel>Email</ControlLabel>{\": \"}\r\n                                <FormControl value={this.state.email}\r\n                                             onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <LoadingButton type=\"submit\"\r\n                                           isLoading={this.state.emailLoading}\r\n                                           text=\"Submit changes\"\r\n                                           loadingText=\"Submitting...\" />\r\n                        </Form>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <Form inline onSubmit={this.handleSubmitSkills}>\r\n                            <FormGroup controlId=\"skills\">\r\n                                <ControlLabel>Skills</ControlLabel>{\": \"}\r\n                                <FormControl value={this.state.skills}\r\n                                             onChange={this.handleChange} />\r\n                                {\r\n                                    // TODO: make changing (and adding) skills UI similar to the one for adding developers\r\n                                    // to a new project\r\n                                }\r\n                            </FormGroup>\r\n                            <LoadingButton type=\"submit\"\r\n                                           isLoading={this.state.skillsLoading}\r\n                                           text=\"Submit changes\"\r\n                                           loadingText=\"Submitting...\" />\r\n                        </Form>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <Checkbox onChange={this.handleCheckbox}>Change password</Checkbox>\r\n                        {this.state.changePassword ?\r\n                            <Form inline onSubmit={this.handleSubmitPassword}>\r\n                                <FormGroup controlId=\"oldPassword\"\r\n                                           validationState={this.getValidationState()} >\r\n                                    <ControlLabel>Old password:</ControlLabel>\r\n                                    <OverlayTrigger placement=\"bottom\" overlay={passwordTooltip}>\r\n                                        <FormControl type=\"password\"\r\n                                                     value={this.state.oldPassword}\r\n                                                     onChange={this.handleChange} />\r\n                                    </OverlayTrigger>\r\n                                    <FormControl.Feedback />\r\n                                </FormGroup>\r\n                                <FormGroup controlId=\"newPassword\"\r\n                                           validationState={this.getValidationState()} >\r\n                                    <ControlLabel>New password:</ControlLabel>\r\n                                    <OverlayTrigger placement=\"bottom\" overlay={passwordTooltip}>\r\n                                        <FormControl type=\"password\"\r\n                                                     value={this.state.newPassword}\r\n                                                     onChange={this.handleChange} />\r\n                                    </OverlayTrigger>\r\n                                    <FormControl.Feedback />\r\n                                </FormGroup>\r\n                                <LoadingButton type=\"submit\"\r\n                                               disabled={!this.getValidationBoolean}\r\n                                               isLoading={this.state.passwordLoading}\r\n                                               text=\"Change\"\r\n                                               loadingText=\"Changing...\" />\r\n                            </Form>\r\n                            : null }\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Button, ControlLabel, Form, FormControl, FormGroup, Glyphicon, ListGroupItem, Modal} from \"react-bootstrap\"\r\n\r\n// Component to allow the admin to add developers when creating the project\r\nexport default class DynamicDeveloperForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentId: 0,\r\n            currentDevelopers: []\r\n        };\r\n\r\n        this.addDeveloper = this.addDeveloper.bind(this);\r\n        this.changeDeveloper = this.changeDeveloper.bind(this);\r\n        this.deleteDeveloper = this.deleteDeveloper.bind(this);\r\n    }\r\n\r\n    addDeveloper(developer) {\r\n        const id = this.state.currentId;\r\n        const devs = this.state.currentDevelopers;\r\n        devs[id] = developer;\r\n        console.log(devs);\r\n\r\n        if (this.props.developers === undefined){\r\n            this.props.confirmDevelopers(true);\r\n        } else if (devs.length !== this.props.developers.length) {\r\n            this.props.confirmDevelopers(false);\r\n        }\r\n        this.setState({currentId: id + 1, currentDevelopers: devs});\r\n    }\r\n\r\n    changeDeveloper(id, developer) {\r\n        const devs = this.state.currentDevelopers;\r\n        devs[id] = developer;\r\n    }\r\n\r\n    deleteDeveloper(id) {\r\n        const devs = this.state.currentDevelopers;\r\n        devs.splice(id, 1);\r\n        if (devs.length === 0) this.props.confirmDevelopers(true);\r\n        this.setState({currentId: devs.length, currentDevelopers: devs});\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.setDevelopers(this.state.currentDevelopers);\r\n        this.props.confirmDevelopers(true);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"developers\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <DeveloperFormList\r\n                        developers={this.state.currentDevelopers}\r\n                        changeDeveloper={this.changeDeveloper}\r\n                        deleteDeveloper={this.deleteDeveloper}\r\n                    />\r\n                    <NewDeveloperForm addDeveloper={this.addDeveloper}\r\n                                      projectManager={this.props.projectManager}\r\n                                      siteUsers={this.props.siteUsers} />\r\n                    <Button type=\"submit\"\r\n                            disabled={this.state.confirmDevelopers}>\r\n                        Confirm developers\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// React component to render all the currently added developers\r\nclass DeveloperFormList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleChange = event => {\r\n        const id = Number(event.target.id);\r\n        const value = event.target.value;\r\n        this.props.changeDeveloper(id, value);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const id = Number(event.target.id);\r\n        this.props.deleteDeveloper(id);\r\n    };\r\n\r\n    render() {\r\n        return this.props.developers.map( (developer, i) =>\r\n            <ListGroupItem key={i}>\r\n                <FormGroup controlId={i.toString()}>\r\n                    <ControlLabel>Developer {i + 1}</ControlLabel>\r\n                    <FormControl onChange={this.handleChange} value={developer} />\r\n                </FormGroup>\r\n\r\n                <Button id={i.toString()} onClick={this.handleDelete}>\r\n                    <Glyphicon glyph=\"minus\"/>\r\n                </Button>\r\n            </ListGroupItem>\r\n        );\r\n    }\r\n}\r\n\r\n// React component to render a new developer form\r\nclass NewDeveloperForm extends Component {\r\n    //TODO: add a way to check the developer exists in the user base\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            newDeveloper: \"\",\r\n            managerError: false,\r\n            error: false\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({newDeveloper: event.target.value});\r\n    };\r\n\r\n    handleAdd = event => {\r\n        if (this.state.newDeveloper === this.props.projectManager){\r\n            this.setState({\r\n                managerError: true,\r\n                error: true\r\n            });\r\n        } else if (this.props.siteUsers.includes(this.state.newDeveloper)){\r\n            this.handleIgnore(event);\r\n        } else {\r\n            this.setState({error: true});\r\n        }\r\n    };\r\n\r\n    handleIgnore = event => {\r\n        event.preventDefault();\r\n        this.props.addDeveloper(this.state.newDeveloper);\r\n        this.setState({\r\n            newDeveloper: \"\",\r\n            error: false\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({error: false});\r\n    };\r\n\r\n    validateForm(){\r\n        return this.state.newDeveloper.length > 0;\r\n    }\r\n\r\n    renderModal() {\r\n        return (\r\n            <Modal show={this.state.error}>\r\n                <Modal.Header>\r\n                    Error!\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {this.state.managerError ?\r\n                        <h4>You cannot add yourself as a developer, this is implied (and can be changed later).</h4>\r\n                        :\r\n                        <h4>User not found in user base.</h4>\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {this.state.managerError ? null :\r\n                        <Button onClick={this.handleIgnore}>Add anyway</Button>\r\n                    }\r\n                    <Button onClick={this.handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListGroupItem>\r\n                <FormGroup controlId=\"newDeveloper\">\r\n                    <ControlLabel>New developer</ControlLabel>\r\n                    <FormControl onChange={this.handleChange} value={this.state.newDeveloper} />\r\n                </FormGroup>\r\n\r\n                <Button disabled={!this.validateForm()} onClick={this.handleAdd}>\r\n                    <Glyphicon glyph=\"plus\" />\r\n                </Button>\r\n                {this.renderModal()}\r\n            </ListGroupItem>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Checkbox, ControlLabel, Form, FormGroup, FormControl, ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport DynamicDeveloperForm from \"../components/DynamicDeveloperForm\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\nimport {API} from \"aws-amplify\";\r\nimport \"./NewProject.css\";\r\n\r\nexport default class NewProject extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            isSubmitting: false,\r\n            confirmDevelopers: true,\r\n            siteUsers: [],\r\n            title: \"\",\r\n            description: \"\",\r\n            developers: []\r\n        };\r\n\r\n        this.setDevelopers = this.setDevelopers.bind(this);\r\n        this.confirmDevelopers = this.confirmDevelopers.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.props.checkTokens();\r\n            const users = await API.get(\"projects\", \"/users/list\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                }\r\n            });\r\n\r\n            let siteUsers = [];\r\n            users.Users.map( (user) => {\r\n                siteUsers.push(user.Username);\r\n            });\r\n            this.setState({siteUsers: siteUsers});\r\n            console.log(this.state.siteUsers);\r\n        } catch (error) {\r\n            console.error(error.response);\r\n        }\r\n        this.setState({isLoading: false});\r\n    };\r\n\r\n    validateForm(){\r\n        return this.state.title.length !==0 && this.state.description.length !== 0 && this.state.confirmDevelopers;\r\n    };\r\n\r\n    setDevelopers(developers) {\r\n        this.setState({developers: developers});\r\n    };\r\n\r\n    confirmDevelopers = boolean => {\r\n        this.setState({confirmDevelopers: boolean});\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    };\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({isSubmitting: true});\r\n\r\n        let usernames = [];\r\n        usernames.push(this.props.user.username);\r\n        for (let i = 0; i < this.state.developers.length; i++){\r\n            usernames.push(this.state.developers[i]);\r\n        }\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            const project = await this.createProject({\r\n                title: this.state.title,\r\n                projectManager: this.props.user.username,\r\n                description: this.state.description,\r\n                developers: this.state.developers,\r\n                usernames: usernames\r\n            });\r\n            console.log(project);\r\n            this.props.history.push(\"/\");\r\n        } catch (error) {\r\n            console.error(error.response);\r\n            this.setState({isSubmitting: false});\r\n        }\r\n    };\r\n\r\n    createProject(project) {\r\n        return API.post(\"projects\", \"/projects\", {\r\n            headers: {\r\n                Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n            },\r\n            body: project\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewProject\">\r\n                {!this.state.isLoading ?\r\n                    <ListGroup>\r\n                        <ListGroupItem>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup controlId=\"title\">\r\n                                    <ControlLabel>Title of project</ControlLabel>{': '}\r\n                                    <FormControl onChange={this.handleChange} value={this.state.title}/>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup controlId=\"description\">\r\n                                    <ControlLabel>Brief description</ControlLabel>{': '}\r\n                                    <FormControl onChange={this.handleChange}\r\n                                                 value={this.state.description}\r\n                                                 componentClass=\"textarea\" />\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <LoadingButton type=\"submit\"\r\n                                                   isLoading={this.state.isSubmitting}\r\n                                                   text=\"Create\"\r\n                                                   loadingText=\"Creating...\"\r\n                                                   disabled={!this.validateForm()} />\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </ListGroupItem>\r\n\r\n                        <ListGroupItem>\r\n                            <h4>*OPTIONAL* Add known developers</h4>\r\n                            <DynamicDeveloperForm setDevelopers={this.setDevelopers}\r\n                                                  confirmDevelopers={this.confirmDevelopers}\r\n                                                  name={this.state.title}\r\n                                                  description={this.state.description}\r\n                                                  projectManager={this.props.user.username}\r\n                                                  siteUsers={this.state.siteUsers} />\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                    :\r\n                    <h2>Loading...</h2>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    ControlLabel,\r\n    DropdownButton,\r\n    Form,\r\n    FormControl,\r\n    FormGroup,\r\n    Glyphicon,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    MenuItem,\r\n    Modal,\r\n    PageHeader,\r\n    Table\r\n} from \"react-bootstrap\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\nimport {API} from \"aws-amplify\";\r\nimport \"./ProjectSettings.css\";\r\n\r\nexport default class ProjectSettings extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            isDeleteLoading: false,\r\n            isChangeLoading: false,\r\n            confirmDelete: false,\r\n            confirmManager: false,\r\n            changeManager: false,\r\n            projectStatus: this.props.project.projectStatus,\r\n            title: this.props.project.title,\r\n            description: this.props.project.description,\r\n            projectManager: this.props.project.projectManager,\r\n            developers: this.props.project.developers,\r\n            usernames: this.props.project.usernames,\r\n            projectRoles: [\r\n                {\r\n                    name: \"Project Manager\",\r\n                    description: \"In charge of the project, has complete access.\"\r\n                },\r\n                {\r\n                    name: \"Developer\",\r\n                    description: \"Develops for the project, has access to viewing the \" +\r\n                        \"project and adding new files/changing ones they've created.\"\r\n                }\r\n            ]\r\n        };\r\n        const roles = [];\r\n        roles.push({Username: this.props.project.projectManager, Role: \"Project Manager\"});\r\n        this.props.project.developers.map( (developer) => {\r\n            roles.push({Username: developer, Role: \"Developer\"})\r\n        });\r\n        this.setState({roles: roles});\r\n        this.setStatus = this.setStatus.bind(this);\r\n        this.setNewRoles = this.setNewRoles.bind(this);\r\n        this.setNewDevelopers = this.setNewDevelopers.bind(this);\r\n        this.changeDevelopers = this.changeDevelopers.bind(this);\r\n    }\r\n\r\n    changeDeleteBool = event => {\r\n        this.setState({confirmDelete: !this.state.confirmDelete})\r\n    };\r\n\r\n    changeManagerBool = event => {\r\n        this.setState({confirmManager: !this.state.confirmManager})\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.id]: event.target.value})\r\n    };\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({isLoading: true});\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            const attributes = await API.put(\"projects\", `/projects/${this.props.project.projectId}`, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                },\r\n                body: {\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    projectStatus: this.state.projectStatus\r\n                }\r\n            });\r\n            console.log(attributes);\r\n        } catch (error) {\r\n            console.error(error.response);\r\n            this.setState({isLoading: false});\r\n        }\r\n        this.setState({isLoading: false});\r\n    };\r\n\r\n    deleteProject = async event => {\r\n        event.preventDefault();\r\n        this.setState({isDeleteLoading: true});\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            await API.del(\"projects\", `/projects/${this.props.match.params.id}`, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error.response);\r\n        }\r\n        this.setState({isDeleteLoading: false});\r\n        this.props.hist.push('/');\r\n    };\r\n\r\n    changeDevelopers = async event => {\r\n        event.preventDefault();\r\n        this.setState({isChangeLoading: true});\r\n\r\n        try {\r\n            await this.props.checkTokens();\r\n            await API.put(\"projects\", `/projects/${this.props.match.params.id}`, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                },\r\n                body: {\r\n                    developers: this.state.developers,\r\n                    usernames: this.state.usernames\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            this.setState({isChangeLoading: false});\r\n        }\r\n    };\r\n\r\n    setStatus(status) {\r\n        this.setState({projectStatus: status});\r\n    };\r\n\r\n    setNewRoles(projectManager, developers) {\r\n        this.setState({\r\n            changeManager: true,\r\n            projectManager: projectManager,\r\n            developers: developers\r\n        });\r\n    }\r\n\r\n    setNewDevelopers(developers, usernames) {\r\n        this.setState({\r\n            developers: developers,\r\n            usernames: usernames\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ProjectSettings\">\r\n                <PageHeader>Project Settings</PageHeader>\r\n                <ListGroup>\r\n                    <ListGroupItem>\r\n                        <h2>Change project details</h2>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup controlId=\"title\">\r\n                                <ControlLabel>Title</ControlLabel>{\": \"}\r\n                                <FormControl value={this.state.title}\r\n                                             placeholder={this.props.project.title}\r\n                                             onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"description\">\r\n                                <ControlLabel>Description</ControlLabel>{\": \"}\r\n                                <FormControl value={this.state.description}\r\n                                             placeholder={this.props.project.description}\r\n                                             onChange={this.handleChange}\r\n                                             componentClass=\"textarea\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <StatusDropdown projectStatus={this.state.projectStatus} setStatus={this.setStatus}/>\r\n                            </FormGroup>\r\n                            <LoadingButton type=\"submit\"\r\n                                           isLoading={this.state.isLoading}\r\n                                           text=\"Change\"\r\n                                           loadingText=\"Changing...\" />\r\n                        </Form>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem>\r\n                        <Table responsive striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Role</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.projectRoles.map( (role, i) =>\r\n                                    <tr>\r\n                                        <td>{role.name}</td>\r\n                                        <td>{role.description}</td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </Table>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem>\r\n                        <Table responsive striped bordered ref=\"Users\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    <th>Username</th>\r\n                                    <th>Role</th>\r\n                                    <th>Skills</th>\r\n                                    <th>Email</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <ProjectUsers projectManager={this.state.projectManager}\r\n                                              developers={this.state.developers}\r\n                                              usernames={this.state.usernames}\r\n                                              siteUsers={this.props.siteUsers}\r\n                                              hist={this.props.hist}\r\n                                              match={this.props.match}\r\n                                              user={this.props.user}\r\n                                              checkTokens={this.props.checkTokens}\r\n                                              setNewDevelopers={this.setNewDevelopers}\r\n                                              changeDevelopers={this.changeDevelopers} />\r\n                            </tbody>\r\n                        </Table>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem>\r\n\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n\r\n                <Button bsStyle=\"danger\"\r\n                        onClick={this.changeDeleteBool}>\r\n                    Delete Project?\r\n                </Button>\r\n\r\n                <Modal className=\"delete-prompt\"\r\n                       show={this.state.confirmDelete} >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Are you sure?</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        Deleting is permanent and you <strong>won't</strong> be able to get your project\r\n                        back.\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.changeDeleteBool}>Cancel</Button>\r\n                        <LoadingButton bsStyle=\"danger\"\r\n                                       onClick={this.deleteProject}\r\n                                       isLoading={this.state.isDeleteLoading}\r\n                                       text=\"Delete\"\r\n                                       loadingText=\"Deleting...\" />\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ProjectUsers extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            changeManager: false,\r\n            newProjectManager: \"\"\r\n        }\r\n    }\r\n\r\n    handleClick = (username, event) => {\r\n        this.setState({\r\n            changeManager: true,\r\n            newProjectManager: username\r\n        });\r\n    };\r\n\r\n    handleHide = event => {\r\n        this.setState({\r\n            changeManager: false,\r\n            newProjectManager: \"\"\r\n        });\r\n    };\r\n\r\n    handleRemove = async (developer, event) => {\r\n        const developers = this.props.developers;\r\n        const usernames = this.props.usernames;\r\n\r\n        developers.splice(developers.indexOf(developer), 1);\r\n        usernames.splice(usernames.indexOf(developer), 1);\r\n\r\n        await this.props.setNewDevelopers(developers, usernames);\r\n        await this.props.changeDevelopers(event);\r\n    };\r\n\r\n    handleChange = async event => {\r\n        event.preventDefault();\r\n        this.setState({isChangeLoading: true});\r\n\r\n        const developers = this.props.developers;\r\n        developers.splice(developers.indexOf(this.state.newProjectManager), 1, this.props.projectManager);\r\n        console.log(developers);\r\n        try {\r\n            await this.props.checkTokens();\r\n            await API.put(\"projects\", `/projects/${this.props.match.params.id}`, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                },\r\n                body: {\r\n                    projectManager: this.state.newProjectManager,\r\n                    developers: developers\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n            this.setState({isChangeLoading: false});\r\n        }\r\n        if (this.props.user.admin) {\r\n            this.setState({changeManager: false});\r\n            window.location.reload();\r\n        } else {\r\n            this.props.hist.push('/');\r\n        }\r\n    };\r\n\r\n    renderModal() {\r\n        return (\r\n            <Modal className={\"change-manager-prompt-\" + this.state.newProjectManager}\r\n                   show={this.state.changeManager} >\r\n                <Modal.Header>\r\n                    <Modal.Title>Are you sure?</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    Once you do this you will <strong>not</strong> be able to change it back (only\r\n                    <i>{\" \" + this.state.newProjectManager}</i> or an admin can).\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button onClick={this.handleHide}>Cancel</Button>\r\n                    <LoadingButton bsStyle=\"danger\"\r\n                                   onClick={this.handleChange}\r\n                                   isLoading={this.state.isLoading}\r\n                                   text=\"Change\"\r\n                                   loadingText=\"Changing...\" />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const siteUsers = this.props.siteUsers;\r\n        const siteUsernames = [];\r\n        siteUsers.map( (user) => {\r\n            siteUsernames.push(user.Username);\r\n        });\r\n\r\n        return this.props.usernames.map( (username, i) => {\r\n            const role = (username === this.props.projectManager) ? \"Project Manager\" : \"Developer\";\r\n                let user = {};\r\n                let email = \"unknown\";\r\n                let skills = \"unknown\";\r\n                if (siteUsernames.indexOf(username) > -1) {\r\n                    user = siteUsers[siteUsernames.indexOf(username)];\r\n                    user.Attributes.map( (attribute) => {\r\n                        if (attribute.Name === \"email\") email = attribute.Value;\r\n                        if (attribute.Name === \"custom:skills\") skills = attribute.Value;\r\n                    });\r\n                }\r\n                return (\r\n                    <tr>\r\n                        <td>{(i+1).toString()}</td>\r\n                        <td>{username}</td>\r\n                        <td>\r\n                            {role}\r\n                            {role !== \"Project Manager\" ?\r\n                                <Button onClick={(event) => this.handleClick(username, event)}\r\n                                        style={{float: \"right\"}}>\r\n                                    Make Project Manager\r\n                                </Button>\r\n                                : null\r\n                            }\r\n                        </td>\r\n                        <td>{skills}</td>\r\n                        <td>{email}</td>\r\n                        <td>\r\n                            <Button onClick={(event) => this.handleRemove(username, event)}>\r\n                                <Glyphicon glyph=\"remove\"/>\r\n                            </Button>\r\n                        </td>\r\n                        {this.renderModal()}\r\n                    </tr>\r\n                );\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nclass StatusDropdown extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            projectStatuses: [\"pending\", \"active\", \"completed\"],\r\n            selected: this.props.projectStatus\r\n        }\r\n    }\r\n\r\n    handleSelect = (eventKey, event) => {\r\n        this.setState({selected: this.state.projectStatuses[eventKey]});\r\n        this.props.setStatus(this.state.projectStatuses[eventKey]);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <DropdownButton dropup title={this.state.selected}>\r\n                {this.state.projectStatuses.map( (status, i) => (\r\n                    <MenuItem key={i} eventKey={i} onSelect={this.handleSelect}>\r\n                        {status}\r\n                    </MenuItem>\r\n                ))}\r\n            </DropdownButton>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport \"./Project.css\";\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            project: this.props.project\r\n        };\r\n    }\r\n\r\n    renderUsers() {\r\n        return this.state.project.developers.map( (user, i) =>\r\n            <ListGroupItem key={i.toString()} header={user}>\r\n                {\r\n                    // TODO: add skills in here pls\r\n                }\r\n            </ListGroupItem>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>{this.state.project.title}</h1>\r\n                <h2>{this.state.project.description}</h2>\r\n                <h3>Project manager: {this.state.project.projectManager}</h3>\r\n                <ListGroup className=\"developers\">\r\n                    <h4>Developers:</h4>\r\n                    {this.renderUsers()}\r\n                    <ListGroupItem>\r\n                        {\r\n                            //TODO: add the project files here\r\n                        }\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Tab, Tabs} from \"react-bootstrap\";\r\nimport ProjectSettings from \"./ProjectSettings\";\r\nimport ProjectView from \"./ProjectView\";\r\nimport {API} from \"aws-amplify\";\r\nimport \"./Project.css\";\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            siteUsers: [],\r\n            project: {}\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.props.checkTokens();\r\n            const project = await this.getProject();\r\n            const users = await API.get(\"projects\", \"/users/list\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                }\r\n            });\r\n            console.log(users.Users);\r\n\r\n            this.setState({\r\n                isLoading: false,\r\n                siteUsers: users.Users,\r\n                project\r\n            });\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n\r\n    getProject() {\r\n        return API.get(\"projects\", `/projects/${this.props.match.params.id}`, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n            }\r\n        });\r\n    }\r\n\r\n    renderLoading() {\r\n        return(<h1>Loading...</h1>);\r\n    }\r\n\r\n    renderProject(){\r\n        return (\r\n            <div>\r\n                {this.state.project.projectManager === this.props.user.username || this.props.user.admin ?\r\n                    <Tabs id=\"project-tab\">\r\n                        <Tab eventKey={1} title=\"View\">\r\n                            <ProjectView project={this.state.project} />\r\n                        </Tab>\r\n                        <Tab eventKey={2} title=\"Settings\">\r\n                            <ProjectSettings project={this.state.project}\r\n                                             hist={this.props.history}\r\n                                             match={this.props.match}\r\n                                             user={this.props.user}\r\n                                             siteUsers={this.state.siteUsers}\r\n                                             checkTokens={this.props.checkTokens} />\r\n                        </Tab>\r\n                    </Tabs> :\r\n                    <ProjectView project={this.state.project}/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"Project\">\r\n                {this.state.isLoading ? this.renderLoading() : this.renderProject()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {ListGroup, ListGroupItem, PageHeader} from \"react-bootstrap\";\r\nimport {API} from \"aws-amplify\";\r\n\r\nexport default class Users extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            siteUsers: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.props.checkTokens();\r\n            const users = await API.get(\"projects\", \"/users/list\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.props.user.auth.AccessToken\r\n                }\r\n            });\r\n            this.setState({siteUsers: users.Users});\r\n        } catch (error) {\r\n            console.error(error.response)\r\n        }\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    renderUserList(users) {\r\n        return users.map( (user) =>\r\n             <ListGroupItem key={user.Username} header={user.Username}>\r\n\r\n                {user.Attributes.map( (attribute) => {\r\n                    if (attribute.Name === \"email\") return <p>Email: {attribute.Value}</p>;\r\n                    else if (attribute.Name === \"custom:skills\") return <p>Skills: {attribute.Value}</p>;\r\n                })}\r\n\r\n                <p>Created at: {new Date(user.UserCreateDate).toLocaleString()}</p>\r\n            </ListGroupItem>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"Users\">\r\n                <PageHeader>Current Users</PageHeader>\r\n                <ListGroup className=\"users-list\">\r\n                    {!this.state.isLoading && this.state.siteUsers && this.renderUserList(this.state.siteUsers)}\r\n                </ListGroup>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default () =>\r\n    <div className=\"NotFound\">\r\n        <h3>Sorry, this page does not exist.</h3>\r\n    </div>","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\n// the Route component takes a prop called component that represents the comp that will be rendered when a matching\r\n// route is found. childProps will be sent to this comp\r\n// it can also take a render method in place of component, so we control whats passed in to our component\r\n// so we can create a component that returns a Route and takes a component and childProps prop. This allows us to\r\n// pass in the component we want rendered and the props we want applied\r\n// props is what is Route passes us, cProps is what we set\r\nexport default ({component: C, props: cProps, ...rest}) =>\r\n    <Route {...rest} render={props => <C {...props} {...cProps} />} />;","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./containers/Home\";\r\nimport Login from \"./containers/Login\";\r\nimport Register from \"./containers/Register\";\r\nimport Account from \"./containers/Account\";\r\nimport NewProject from \"./containers/NewProject\";\r\nimport Project from \"./containers/Project\";\r\nimport Users from \"./containers/Users\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport AppliedRoute from \"./components/AppliedRoute\";\r\n\r\nexport default ({childProps}) =>\r\n    <Switch>\r\n        <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\r\n        <AppliedRoute path=\"/login\" exact component={Login} props={childProps} />\r\n        <AppliedRoute path=\"/register\" exact component={Register} props={childProps} />\r\n        <AppliedRoute path=\"/account\" exact component={Account} props={childProps} />\r\n        <AppliedRoute path=\"/projects/new\" exact component={NewProject} props={childProps} />\r\n        <AppliedRoute path=\"/projects/:id\" exact component={Project} props={childProps} />\r\n        <AppliedRoute path=\"/users\" exact component={Users} props={childProps} />\r\n        <Route component={NotFound} />\r\n    </Switch>","import React, {Component, Fragment} from 'react';\r\nimport {Navbar, Nav, NavItem} from \"react-bootstrap\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport Routes from \"./Routes\";\r\nimport './App.css';\r\nimport {API} from \"aws-amplify\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isAuthenticated: false,\r\n            isAuthenticating: true,\r\n            user: null\r\n        };\r\n        this.setCurrentUser = this.setCurrentUser.bind(this);\r\n        this.checkTokens = this.checkTokens.bind(this);\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            // this will be used to get the current user from a saved session\r\n            const user = JSON.parse(localStorage.getItem(\"ProjectManagerSession\"));\r\n            console.log(user);\r\n            if (user === null) {\r\n                console.log(\"User is null\");\r\n                // no stored user means user has not logged in/authenticated\r\n                this.userHasAuthenticated(false);\r\n                this.setState({isAuthenticating: false});\r\n                return;\r\n            }\r\n\r\n            this.setCurrentUser(user);\r\n            console.log(this.state.user);\r\n            await this.setState({user: user});\r\n            await this.checkTokens();\r\n            this.userHasAuthenticated(true);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n        this.setState({isAuthenticating: false});\r\n    };\r\n\r\n    // function to check if the given users tokens have expired, and if so refresh them and change the current user\r\n    async checkTokens () {\r\n        console.log(\"called check tokens\");\r\n\r\n        const serverTime = Math.floor(new Date()/1000) - this.state.user.auth.ClockDrift;\r\n        if (serverTime > this.state.user.auth.Expiration) {\r\n            try {\r\n                const refreshUser = this.state.user;\r\n                const auth = (await API.get(\"projects\", \"/users/refresh\", {\r\n                    queryStringParameters: {\r\n                        RefreshToken: refreshUser.auth.RefreshToken\r\n                    }\r\n                })).body;\r\n                console.log(auth);\r\n\r\n                refreshUser.auth.AccessToken = auth.AccessToken;\r\n                refreshUser.auth.IdToken = auth.IdToken;\r\n                refreshUser.auth.IssuedAt = auth.IssuedAt;\r\n                refreshUser.auth.Expiration = auth.Expiration;\r\n                refreshUser.auth.ClockDrift = Math.floor(new Date()/1000) - auth.IssuedAt;\r\n\r\n                console.log(\"Refreshed Access and Id tokens\");\r\n                await this.setState(refreshUser);\r\n            } catch (error) {\r\n                console.log(error.response);\r\n            }\r\n        }\r\n        return;\r\n    };\r\n\r\n    userHasAuthenticated = authenticated => {\r\n        this.setState({isAuthenticated: authenticated});\r\n    };\r\n\r\n    setCurrentUser = user => {\r\n        this.setState({user: user});\r\n    };\r\n\r\n    handleLogout = async event => {\r\n        event.preventDefault();\r\n        try {\r\n            await this.checkTokens();\r\n            await API.post(\"projects\", \"/logout\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.state.user.auth.AccessToken\r\n                }\r\n            });\r\n            localStorage.removeItem(\"ProjectManagerSession\");\r\n            this.userHasAuthenticated(false);\r\n            this.setCurrentUser({});\r\n            this.props.history.push(\"/\");\r\n        } catch (error) {\r\n            console.error(error.response);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const childProps = {\r\n            isAuthenticated: this.state.isAuthenticated,\r\n            user: this.state.user,\r\n            setCurrentUser: this.setCurrentUser,\r\n            userHasAuthenticated: this.userHasAuthenticated,\r\n            checkTokens: this.checkTokens\r\n        };\r\n\r\n        return (\r\n            !this.state.isAuthenticating &&\r\n            <div className=\"App\">\r\n                <Navbar fluid collapseOnSelect>\r\n                    <Navbar.Header>\r\n                        <Navbar.Brand>\r\n                            <Link to=\"/\"><h2>Project Manager</h2></Link>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle/>\r\n                    </Navbar.Header>\r\n                    <Navbar.Collapse>\r\n                        <Nav pullRight>\r\n                            {this.state.isAuthenticated ?\r\n                                <Fragment>\r\n                                    <LinkContainer to=\"/users\">\r\n                                        <NavItem>Users</NavItem>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/account\">\r\n                                        <NavItem>{this.state.user.username}</NavItem>\r\n                                    </LinkContainer>\r\n                                    <NavItem onClick={this.handleLogout}>Logout</NavItem>\r\n                                </Fragment>\r\n                                : <Fragment>\r\n                                    <LinkContainer to=\"/login\">\r\n                                        <NavItem>Login</NavItem>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/register\">\r\n                                        <NavItem>Register</NavItem>\r\n                                    </LinkContainer>\r\n                                </Fragment>\r\n                            }\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Routes childProps={childProps}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {\r\n    s3: {\r\n        REGION: \"eu-west-2\",\r\n        BUCKET: \"project-management-projects\"\r\n    },\r\n    apiGateway: {\r\n        REGION: \"eu-west-2\",\r\n        URL: \"https://z8ogont2v6.execute-api.eu-west-2.amazonaws.com/dev\"\r\n    },\r\n    cognito: {\r\n        REGION: \"eu-west-2\",\r\n        USER_POOL_ID: \"eu-west-2_7DRbUQOk6\",\r\n        APP_CLIENT_ID: \"27cus2iiajkktqa6tk984jqgqa\",\r\n        IDENTITY_POOL_ID: \"eu-west-2:16e65f15-a1f6-4c57-b896-108cdd4593b6\"\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Amplify from \"aws-amplify\";\r\nimport config from \"./config\";\r\n\r\nAmplify.configure({\r\n    /*\r\n    Auth: {\r\n        mandatorySignIn: true,\r\n        region: config.cognito.REGION,\r\n        userPoolId: config.cognito.USER_POOL_ID,\r\n        identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n    },\r\n    */\r\n    Storage: {\r\n        region: config.s3.REGION,\r\n        bucket: config.s3.BUCKET,\r\n        identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n    },\r\n    API: {\r\n        endpoints: [{\r\n            name: \"projects\",\r\n            region: config.apiGateway.REGION,\r\n            endpoint: config.apiGateway.URL\r\n        }]\r\n    }\r\n});\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}