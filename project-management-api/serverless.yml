service:
  name: project-management-api

# serverless-webpack and serverless-offline plugins
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# also enable autopacking of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  iamRoleStatements:
    - Effect: Allow
      Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-west-2:*:*"

# API endpoints for the functions
functions:
  create:
    handler: create.main
    events:
      - http:
          method: post
          path: projects
          cors: true
          authorizer: aws_iam
  get:
    handler: get.main
    events:
      - http:
          method: get
          path: projects/{id}
          cors: true
          authorizer: aws_iam
  list:
    handler: list-projects.main
    events:
      - http:
          method: get
          path: projects
          cors: true
          authorizer: aws_iam
  delete:
    handler: delete.main
    events:
      - http:
          method: delete
          path: projects/{id}
          cors: true
          authorizer: aws_iam
  modify:
    handler: modify.main
    events:
      - http:
          method: put
          path: projects/{id}
          cors: true
          authorizer: aws_iam
  create-role:
    handler: create-role.main
    events:
      - http:
          method: post
          paths: projects/{id}
          cors: true
          authorizer: aws_iam
  delete-role:
    handler: delete-role.main
    events:
      - http:
          method: delete
          paths: projects/{id}
          cors: true
          authorizer: aws_iam
  modify-role:
    handler: modify-role.main
    events:
      - http:
          method: put
          paths: projects/{id}
          cors: true
          authorizer: aws_iam
  create-group:
    handler: create-group.main
    events:
      - http:
          method: post
          paths: projects/{id}
          cors: true
          authorizer: aws_iam
  delete-group:
    handler: delete-group.main
    events:
      - http:
          method: delete
          paths: projects/{id}
          cors: true
          authorizer: aws_iam
  modify-group:
    handler: modify-group.main
    events:
      - http:
          method: put
          paths: projects/{id}
          cors: true
          authorizer: aws_iam
  add-user:
    handler: add-user.main
    events:
      - http:
          method: post
          paths: projects/{id}
          cors: true
          authorizer: aws_iam
  remove-user:
    handler: remove-user.main
    events:
      - http:
          method: delete
          paths: projects/{id}
          cors: true
          authorizer: aws_iam